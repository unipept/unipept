SHELL := /bin/bash

TABLES=                                           \
	<<<INTDIR>>>/peptides.tsv.gz                  \
	<<<TABDIR>>>/uniprot_entries.tsv.gz           \
	<<<TABDIR>>>/refseq_cross_references.tsv.gz   \
	<<<TABDIR>>>/ec_cross_references.tsv.gz       \
	<<<TABDIR>>>/embl_cross_references.tsv.gz     \
	<<<TABDIR>>>/go_cross_references.tsv.gz       \
	<<<INTDIR>>>/proteomes.tsv.gz                 \
	<<<TABDIR>>>/proteome_cross_references.tsv.gz

SRC=$(shell find src/ -type f -name '*.java')
JAR=target/unipept-0.0.1-SNAPSHOT.jar
PAC=org.unipept.tools

all: $(JAR) <<<TABDIR>>>/taxons.tsv.gz <<<TABDIR>>>/lineages.tsv.gz $(TABLES) <<<TABDIR>>>/sequences.tsv.gz <<<TABDIR>>>/peptides.tsv.gz <<<TABDIR>>>/proteomes.tsv.gz
jar: $(JAR)
taxons: <<<TABDIR>>>/taxons.tsv.gz <<<TABDIR>>>/lineages.tsv.gz
tables: $(TABLES)
sequences: <<<TABDIR>>>/sequences.tsv.gz
proteomes: <<<TABDIR>>>/proteomes.tsv.gz
download: <<<SOURCE_FILES>>>

# Compiling {{{ ----------------------------------------------------------------
# TODO:
# - split dependencies for this on the class files.
$(JAR): $(SRC)
	mvn package

%.class: $(JAR)
# }}}

# Downloading {{{ --------------------------------------------------------------
<<<TAXDIR>>>/taxdmp.zip:
	echo "Starting taxon dump download."
	mkdir -p <<<TAXDIR>>>
	-rm -f $@
	wget --no-verbose "<<<TAXON_URL>>>" -O $@
	echo "Finished taxon dump download."

<<<INTDIR>>>/names.dmp <<<INTDIR>>>/nodes.dmp: <<<TAXDIR>>>/taxdmp.zip
	echo "Starting unzipping names and nodes from the taxon dump."
	<<<CMD_UNZIP>>> -o $< $(notdir $@) -d $(dir $@)
	echo "Finished unzipping names and nodes from the taxon dump."
# }}}

# Taxons and Lineages {{{ ------------------------------------------------------
<<<TABDIR>>>/taxons.tsv.gz <<<TABDIR>>>/lineages.tsv.gz: <<<INTDIR>>>/names.dmp <<<INTDIR>>>/nodes.dmp
	echo "Starting calculation of taxons and lineages tables."
	mkdir -p $(dir $@)
	java -Xms<<<JAVA_MEM>>> -Xmx<<<JAVA_MEM>>> -cp $(JAR) $(PAC).NamesNodes2TaxonsLineages \
		--names <<<INTDIR>>>/names.dmp \
		--nodes <<<INTDIR>>>/nodes.dmp \
		--taxons >(<<<CMD_GZIP>>> > <<<TABDIR>>>/taxons.tsv.gz) \
		--lineages >(<<<CMD_GZIP>>> > <<<TABDIR>>>/lineages.tsv.gz)
	echo "Finished calculation of taxons and lineages tables."
# }}}

# Uniprot entries, peptides, sequences and cross references {{{ ----------------
$(TABLES): <<<TABDIR>>>/taxons.tsv.gz <<<SOURCE_FILES>>>
	echo "Started calculation of most tables."
	mkdir -p <<<INTDIR>>>
	java -Xms<<<JAVA_MEM>>> -Xmx<<<JAVA_MEM>>> -cp $(JAR) $(PAC).TaxonsUniprots2Tables              \
		--peptide-min     <<<PEPTIDE_MIN_LENGTH>>>                                                 \
		--peptide-max     <<<PEPTIDE_MAX_LENGTH>>>                                                 \
		--taxons          <(<<<CMD_ZCAT>>> <<<TABDIR>>>/taxons.tsv.gz)                           \
		--peptides        >(<<<CMD_GZIP>>> > <<<INTDIR>>>/peptides.tsv.gz)                  \
		--uniprot-entries >(<<<CMD_GZIP>>> > <<<TABDIR>>>/uniprot_entries.tsv.gz)           \
		--refseq          >(<<<CMD_GZIP>>> > <<<TABDIR>>>/refseq_cross_references.tsv.gz)   \
		--ec              >(<<<CMD_GZIP>>> > <<<TABDIR>>>/ec_cross_references.tsv.gz)       \
		--embl            >(<<<CMD_GZIP>>> > <<<TABDIR>>>/embl_cross_references.tsv.gz)     \
		--go              >(<<<CMD_GZIP>>> > <<<TABDIR>>>/go_cross_references.tsv.gz)       \
		--proteomes       >(<<<CMD_GZIP>>> > <<<INTDIR>>>/proteomes.tsv.gz)                 \
		--proteomes-ref   >(<<<CMD_GZIP>>> > <<<TABDIR>>>/proteome_cross_references.tsv.gz) \
		<<<SOURCE_INPUTS>>>
	echo "Finished calculation of most tables."
# }}}

# Sequences with LCA {{{ -------------------------------------------------------
<<<INTDIR>>>/aa_sequence_taxon.tsv.gz: <<<INTDIR>>>/peptides.tsv.gz <<<TABDIR>>>/uniprot_entries.tsv.gz
	echo "Starting the joining of equalized peptides and uniprot entries."
	mkdir -p <<<INTDIR>>>
	join -t '	' -o '1.2,2.2' -j 1 \
			<(<<<CMD_ZCAT>>> <<<INTDIR>>>/peptides.tsv.gz | awk '{ printf("%012d\t%s\n", $$4, $$2) }') \
			<(<<<CMD_ZCAT>>> <<<TABDIR>>>/uniprot_entries.tsv.gz | awk '{ printf("%012d\t%s\n", $$1, $$4) }') \
		| LC_ALL=C <<<CMD_SORT>>> -k1 \
		| <<<CMD_GZIP>>> \
		> $@
	echo "Finished the joining of equalized peptides and uniprot entries."

<<<INTDIR>>>/original_aa_sequence_taxon.tsv.gz: <<<INTDIR>>>/peptides.tsv.gz <<<TABDIR>>>/uniprot_entries.tsv.gz
	echo "Starting the joining of non-equalized peptides and uniprot entries."
	mkdir -p <<<INTDIR>>>
	join -t '	' -o '1.2,2.2' -j 1 \
			<(<<<CMD_ZCAT>>> <<<INTDIR>>>/peptides.tsv.gz | awk '{ printf("%012d\t%s\n", $$4, $$3) }') \
			<(<<<CMD_ZCAT>>> <<<TABDIR>>>/uniprot_entries.tsv.gz | awk '{ printf("%012d\t%s\n", $$1, $$4) }') \
		| LC_ALL=C <<<CMD_SORT>>> -k1 \
		| <<<CMD_GZIP>>> \
		> $@
	echo "Finished the joining of non-equalized peptides and uniprot entries."

<<<INTDIR>>>/sequences.tsv.gz: <<<INTDIR>>>/aa_sequence_taxon.tsv.gz <<<INTDIR>>>/original_aa_sequence_taxon.tsv.gz
	echo "Starting the numbering of sequences."
	LC_ALL=C <<<CMD_SORT>>> -m \
			<(<<<CMD_ZCAT>>> <<<INTDIR>>>/aa_sequence_taxon.tsv.gz | cut -f1) \
			<(<<<CMD_ZCAT>>> <<<INTDIR>>>/original_aa_sequence_taxon.tsv.gz | cut -f1) \
		| uniq \
		| cat -n \
		| <<<CMD_SED>>> 's/^ *//' \
		| <<<CMD_GZIP>>> \
		> $@
	echo "Finishing the numbering of sequences."

<<<TABDIR>>>/peptides.tsv.gz: <<<INTDIR>>>/peptides.tsv.gz <<<INTDIR>>>/sequences.tsv.gz
	echo "Starting the substitution of AA's by ID's for the peptides."
	<<<CMD_ZCAT>>> <<<INTDIR>>>/peptides.tsv.gz \
		| LC_ALL=C <<<CMD_SORT>>> -k 2b,2 \
		| join -t '	' -o '1.1,2.1,1.3,1.4' -1 2 -2 2 - <(<<<CMD_ZCAT>>> <<<INTDIR>>>/sequences.tsv.gz) \
		| LC_ALL=C <<<CMD_SORT>>> -k 3b,3 \
		| join -t '	' -o '1.1,1.2,2.1,1.4' -1 3 -2 2 - <(<<<CMD_ZCAT>>> <<<INTDIR>>>/sequences.tsv.gz) \
		| LC_ALL=C <<<CMD_SORT>>> -n \
		| <<<CMD_GZIP>>> \
		> $@
	echo "Finishing the substitution of AA's by ID's for the peptides."

<<<INTDIR>>>/sequence_taxon.tsv.gz: <<<INTDIR>>>/sequences.tsv.gz <<<INTDIR>>>/aa_sequence_taxon.tsv.gz
	echo "Starting the substitution of AA's by ID's for the sequences"
	join -t '	' -o '1.1,2.2' -1 2 -2 1 \
			<(<<<CMD_ZCAT>>> <<<INTDIR>>>/sequences.tsv.gz) \
			<(<<<CMD_ZCAT>>> <<<INTDIR>>>/aa_sequence_taxon.tsv.gz) \
		| <<<CMD_GZIP>>> \
		> $@
	echo "Finishing the substitution of AA's by ID's for the sequences"

<<<INTDIR>>>/original_sequence_taxon.tsv.gz: <<<INTDIR>>>/sequences.tsv.gz <<<INTDIR>>>/original_aa_sequence_taxon.tsv.gz
	echo "Starting the substitution of AA's by ID's for the original sequences"
	join -t '	' -o '1.1,2.2' -1 2 -2 1 \
			<(<<<CMD_ZCAT>>> <<<INTDIR>>>/sequences.tsv.gz) \
			<(<<<CMD_ZCAT>>> <<<INTDIR>>>/original_aa_sequence_taxon.tsv.gz) \
		| <<<CMD_GZIP>>> \
		> $@
	echo "Finishing the substitution of AA's by ID's for the original sequences"

<<<INTDIR>>>/LCAs.tsv.gz: <<<TABDIR>>>/lineages.tsv.gz <<<INTDIR>>>/sequence_taxon.tsv.gz
	echo "Starting the calculation equalized LCA's."
	java -Xms<<<JAVA_MEM>>> -Xmx<<<JAVA_MEM>>> -cp $(JAR) $(PAC).LineagesSequencesTaxons2LCAs \
		<(<<<CMD_ZCAT>>> <<<TABDIR>>>/lineages.tsv.gz) \
		<(<<<CMD_ZCAT>>> <<<INTDIR>>>/sequence_taxon.tsv.gz) \
		>(<<<CMD_GZIP>>> > <<<INTDIR>>>/LCAs.tsv.gz)
	echo "Finished the calculation equalized LCA's."

<<<INTDIR>>>/original_LCAs.tsv.gz: <<<TABDIR>>>/lineages.tsv.gz <<<INTDIR>>>/original_sequence_taxon.tsv.gz
	echo "Starting the calculation non-equalized LCA's."
	java -Xms<<<JAVA_MEM>>> -Xmx<<<JAVA_MEM>>> -cp $(JAR) $(PAC).LineagesSequencesTaxons2LCAs \
		<(<<<CMD_ZCAT>>> <<<TABDIR>>>/lineages.tsv.gz) \
		<(<<<CMD_ZCAT>>> <<<INTDIR>>>/original_sequence_taxon.tsv.gz) \
		>(<<<CMD_GZIP>>> > <<<INTDIR>>>/original_LCAs.tsv.gz)
	echo "Finished the calculation non-equalized LCA's."

<<<TABDIR>>>/sequences.tsv.gz: <<<INTDIR>>>/sequences.tsv.gz <<<INTDIR>>>/LCAs.tsv.gz <<<INTDIR>>>/original_LCAs.tsv.gz
	echo "Starting the creation of the sequences table."
	<<<CMD_ZCAT>>> <<<INTDIR>>>/sequences.tsv.gz \
		| join --nocheck-order -a1 -t '	' -o "1.1 1.2 2.2" - <(<<<CMD_ZCAT>>> <<<INTDIR>>>/original_LCAs.tsv.gz) \
		| join --nocheck-order -a1 -t '	' -o "1.1 1.2 1.3 2.2" - <(<<<CMD_ZCAT>>> <<<INTDIR>>>/LCAs.tsv.gz) \
		| <<<CMD_GZIP>>> \
		> $@
	echo "Finished the creation of the sequences table."

# }}}

# Proteomes {{{ ----------------------------------------------------------------
<<<TABDIR>>>/proteomes.tsv.gz: <<<INTDIR>>>/proteomes.tsv.gz proteomes.sh type_strains.sh
	echo "Starting fetching proteome info."
	./proteomes.sh \
		<<<INTDIR>>>/proteomes.tsv.gz \
		<(ENTREZ_URL=<<<ENTREZ_URL>>> ENTREZ_BATCH_SIZE=<<<ENTREZ_BATCH_SIZE>>> ./type_strains.sh) \
		<<<TABDIR>>>/proteomes.tsv.gz
	echo "Finished fetching proteome info."
# }}}

.PHONY: clean_intermediates
clean_intermediates:
	rm -vf <<<INTDIR>>>/*

.PHONY: clean
clean: clean_intermediates
	rm -vf <<<TABDIR>>>/*

.PHONY: pristine
pristine: clean
	rm -vf $(JAR)
	rm -vf <<<TAXDIR>>>/taxdmp.zip
	rm -vf <<<SOURCE_FILES>>>


