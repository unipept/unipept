<div class="apidocs row">
  <div class="col-xs-9">
    <div class='page-header'>
      <h1><span class="initialism">POST</span> /api/v1/pept2prot
        <br>
        <small>Returns the list of UniProt entries containing a given tryptic peptide.</small>
      </h1>
    </div>

    <p>
      This method returns the list of UniProt entries containing a given tryptic peptide. This is the same information as provided on the <em>Protein matches</em> tab when performing a search with the <%= link_to("Tryptic Peptide Analysis", search_single_path) %> in the web interface.
    </p>

    <h2 id="request">Request</h2>
    <p>
      The pept2prot method can be used by doing a <span class="initialism">HTTP</span> <span class="initialism">POST</span>-request (preferred) or <span class="initialism">GET</span>-request to <code>http://<%= Rails.application.config.api_host %>/api/v1/pept2prot</code>. <a href="#parameters">Parameters</a> can be included in the request body (<span class="initialism">POST</span>) or in the query string (<span class="initialism">GET</span>). The only required parameter is <code>input[]</code>, which takes one or more tryptic peptides.
    </p>

    <h3>input</h3>
    <p>
      <code>input[]</code> is a required parameter that takes one or more tryptic peptides. Unipept will return the list of UniProt records that contain any of the <code>input[]</code> peptides in their protein sequence. To pass multiple peptides at once, simply add multiple <code>input[]</code> parameters (see <a href="#apidocs-example-multiple">example</a>).
    </p>

    <div class="apidocs-callout apidocs-callout-warning">
      <h4>Input size</h4>
      <p>Unipept puts no restrictions on the number of peptides passed to the <code>input[]</code> parameter. Keep in mind that searching for lots of peptides at once may cause the request to timeout or, in the case of a <span class="initialism">GET</span>-request, exceed the maximum URL length. When performing bulk searches, we suggest splitting the input set over requests of 100 peptides each.</p>
    </div>

    <h3>equate_il</h3>
    <p>
      <code>equate_il</code> is an optional parameter and can either be <code>true</code> or <code>false</code>. When not set explicitly, the parameter defaults to <code>false</code>. When the parameter is set to <code>true</code>, isoleucine (I) and leucine (L) are equated when matching tryptic peptides to UniProt records. This setting is similar to checking the <i>Equate I and L?</i> checkbox when performing a search with the <%= link_to("Tryptic Peptide Analysis", search_single_path) %> in the web interface.
    </p>

    <h3>extra</h3>
    <p>
      <code>extra</code> is an optional parameter and can either be <code>true</code> or <code>false</code>. When not set explicitly, the parameter defaults to <code>false</code>. When the parameter is set to <code>true</code>, Unipept will return additional information fields. See the <a href="#response">response</a> section for an overview of the information fields returned.
    </p>

    <div class="apidocs-callout apidocs-callout-warning">
      <h4>Performance penalty</h4>
      <p>Setting <code>extra</code> to <code>true</code> has a performance penalty inferred from additional database queries. Do not use this parameter unless the extra information fields are needed.</p>
    </div>

    <h2 id="response">Response</h2>
    <p>
      Matching UniProt records are returned as a list of <span class="initialism">JSON</span> objects. By default, each object contains the following information fields extracted from the UniProt record:
    </p>

    <ul>
      <li><code>peptide</code>: the peptide that matched this record</li>
      <li><code>uniprot_id</code>: the UniProt accession number of the matching record</li>
      <li><code>taxon_id</code>: the <span class="initialism">NCBI</span> taxon id of the organism associated with the matching record</li>
    </ul>

    <p>When the <code>extra</code> parameter is set to <code>true</code>, objects contain the following additional fields extracted from the UniProt record:</p>

    <ul>
      <li><code>taxon_name</code>: the name of the organism associated with the matching UniProt record</li>
      <li><code>ec_references</code>: a space separated list of associated EC numbers</li>
      <li><code>go_references</code>: a space separated list of associated GO terms</li>
    </ul>

    <h2 id="parameters">Parameters</h2>

    <%= render "parameters", parameters: [
      {
        name: "input[]",
        required: true,
        optional: false,
        description: "Tryptic peptide to search for. Add multiple parameters to search for multiple peptides.",
        value: "String"
      },
      {
        name: "equate_il",
        required: false,
        optional: true,
        description: "Equate isoleucine (I) and leucine (L).",
        value: "Must be <code>true</code> or <code>false</code> (default)"
      },
      {
        name: "extra",
        required: false,
        optional: true,
        description: "Return additional information fields if <code>true</code>.",
        value: "Must be <code>true</code> or <code>false</code> (default)"
      }
    ]
    %>

    <h2 id="examples">Examples</h2>
    <%= render 'example',
      example_id: "apidocs-example-single",
      title: "Retrieve all UniProt records containing a given tryptic peptide",
      explanation: "<p>This example retrieves all UniProt records containing the peptide <i class='initialism'>AIPQLEVARPADAYETAEAYR</i>. The result is the same as " + link_to('this search', sequence_path('AIPQLEVARPADAYETAEAYR')) + " with the Tryptic Peptide Analysis in the web interface.</p>",
      post_request: "<span class='gp'>$</span> curl -X POST -H <span class='s2'>'Accept: application/json'</span> #{Rails.application.config.api_host}/api/v1/pept2prot \\
-d <span class='s1'>'input[]=AIPQLEVARPADAYETAEAYR'</span>",
      get_request: "<a href='http://#{Rails.application.config.api_host}/api/v1/pept2prot.json?input[]=AIPQLEVARPADAYETAEAYR' target='_blank'>http://#{Rails.application.config.api_host}/api/v1/pept2prot.json?input[]=AIPQLEVARPADAYETAEAYR</a>",
      response: "<span class='p'>[</span>
  <span class='p'>{</span>
    <span class='nx'>peptide</span><span class='o'>:</span> <span class='s2'>'AIPQLEVARPADAYETAEAYR'</span><span class='p'>,</span>
    <span class='nx'>uniprot_id</span><span class='o'>:</span> <span class='s2'>'A7A5N6'</span><span class='p'>,</span>
    <span class='nx'>taxon_id</span><span class='o'>:</span> <span class='mi'>411481</span>
  <span class='p'>},</span>
  <span class='p'>{</span>
    <span class='nx'>peptide</span><span class='o'>:</span> <span class='s2'>'AIPQLEVARPADAYETAEAYR'</span><span class='p'>,</span>
    <span class='nx'>uniprot_id</span><span class='o'>:</span> <span class='s2'>'A1A1M7'</span><span class='p'>,</span>
    <span class='nx'>taxon_id</span><span class='o'>:</span> <span class='mi'>367928</span>
  <span class='p'>}</span>
<span class='p'>]</span>"
    %>

    <%= render 'example',
      example_id: "apidocs-example-multiple",
      title: "Retrieve all UniProt records containing any of multiple tryptic peptides",
      explanation: "<p>This example retrieves all UniProt records containing either the tryptic peptide <i class='initialism'>AIPQLEVARPADAYETAEAYR</i> or the tryptic peptide <i class='initialism'>APVLSDSSCK</i>. The result is the same as the combination of " + link_to("this search", sequence_path("AIPQLEVARPADAYETAEAYR")) + " and " + link_to("this search", sequence_path("APVLSDSSCK")) + " with the Tryptic Peptide Analysis in the web interface.</p>",
      post_request: "<span class='gp'>$</span> curl -X POST -H <span class='s2'>'Accept: application/json'</span> #{Rails.application.config.api_host}/api/v1/pept2prot \\
-d <span class='s1'>'input[]=AIPQLEVARPADAYETAEAYR'</span> \\
-d <span class='s1'>'input[]=APVLSDSSCK'</span>",
      get_request: "<a href='http://#{Rails.application.config.api_host}/api/v1/pept2prot.json?input[]=AIPQLEVARPADAYETAEAYR&input[]=APVLSDSSCK' target='_blank'>http://#{Rails.application.config.api_host}/api/v1/pept2prot.json?input[]=AIPQLEVARPADAYETAEAYR&amp;input[]=APVLSDSSCK</a>",
      response: "<span class='p'>[</span>
  <span class='p'>{</span>
    <span class='nx'>peptide</span><span class='o'>:</span> <span class='s2'>'AIPQLEVARPADAYETAEAYR'</span><span class='p'>,</span>
    <span class='nx'>uniprot_id</span><span class='o'>:</span> <span class='s2'>'A7A5N6'</span><span class='p'>,</span>
    <span class='nx'>taxon_id</span><span class='o'>:</span> <span class='mi'>411481</span>
  <span class='p'>},</span>
  <span class='p'>{</span>
    <span class='nx'>peptide</span><span class='o'>:</span> <span class='s2'>'AIPQLEVARPADAYETAEAYR'</span><span class='p'>,</span>
    <span class='nx'>uniprot_id</span><span class='o'>:</span> <span class='s2'>'A1A1M7'</span><span class='p'>,</span>
    <span class='nx'>taxon_id</span><span class='o'>:</span> <span class='mi'>367928</span>
  <span class='p'>},</span>
  <span class='p'>{</span>
    <span class='nx'>peptide</span><span class='o'>:</span> <span class='s2'>'APVLSDSSCK'</span><span class='p'>,</span>
    <span class='nx'>uniprot_id</span><span class='o'>:</span> <span class='s2'>'P00761'</span><span class='p'>,</span>
    <span class='nx'>taxon_id</span><span class='o'>:</span> <span class='mi'>9823</span>
  <span class='p'>},</span>
  <span class='p'>{</span>
    <span class='nx'>peptide</span><span class='o'>:</span> <span class='s2'>'APVLSDSSCK'</span><span class='p'>,</span>
    <span class='nx'>uniprot_id</span><span class='o'>:</span> <span class='s2'>'C5IWV5'</span><span class='p'>,</span>
    <span class='nx'>taxon_id</span><span class='o'>:</span> <span class='mi'>9823</span>
  <span class='p'>},</span>
  <span class='p'>{</span>
    <span class='nx'>peptide</span><span class='o'>:</span> <span class='s2'>'APVLSDSSCK'</span><span class='p'>,</span>
    <span class='nx'>uniprot_id</span><span class='o'>:</span> <span class='s2'>'F1SRS2'</span><span class='p'>,</span>
    <span class='nx'>taxon_id</span><span class='o'>:</span> <span class='mi'>9823</span>
  <span class='p'>}</span>
<span class='p'>]</span>"
    %>

    <%= render 'example',
      example_id: "apidocs-example-equate_il",
      title: "Retrieve all UniProt records containing a single tryptic peptide, while equating I and L",
      explanation: "<p>This example retrieves all UniProt records containing the tryptic peptide <i class='initialism'>APVISDSSCK</i>. In searching, isoleucine (I) and leucine (L) are considered equal. The result is the same as " + link_to("this search", sequence_path("APVISDSSCK") + "/equate_il") + " with the Tryptic Peptide Analysis in the web interface.</p>",
      post_request: "<span class='gp'>$</span> curl -X POST -H <span class='s2'>'Accept: application/json'</span> #{Rails.application.config.api_host}/api/v1/pept2prot \\
-d <span class='s1'>'input[]=APVISDSSCK'</span> \\
-d <span class='s1'>'equate_il=true'</span>",
      get_request: "<a href='http://#{Rails.application.config.api_host}/api/v1/pept2prot.json?input[]=APVISDSSCK&equate_il=true' target='_blank'>http://#{Rails.application.config.api_host}/api/v1/pept2prot.json?input[]=APVISDSSCK&amp;equate_il=true</a>",
      response: "<span class='p'>[</span>
  <span class='p'>{</span>
    <span class='nx'>peptide</span><span class='o'>:</span> <span class='s2'>'APVISDSSCK'</span><span class='p'>,</span>
    <span class='nx'>uniprot_id</span><span class='o'>:</span> <span class='s2'>'P00761'</span><span class='p'>,</span>
    <span class='nx'>taxon_id</span><span class='o'>:</span> <span class='mi'>9823</span>
  <span class='p'>},</span>
  <span class='p'>{</span>
    <span class='nx'>peptide</span><span class='o'>:</span> <span class='s2'>'APVISDSSCK'</span><span class='p'>,</span>
    <span class='nx'>uniprot_id</span><span class='o'>:</span> <span class='s2'>'C5IWV5'</span><span class='p'>,</span>
    <span class='nx'>taxon_id</span><span class='o'>:</span> <span class='mi'>9823</span>
  <span class='p'>},</span>
  <span class='p'>{</span>
    <span class='nx'>peptide</span><span class='o'>:</span> <span class='s2'>'APVISDSSCK'</span><span class='p'>,</span>
    <span class='nx'>uniprot_id</span><span class='o'>:</span> <span class='s2'>'F1SRS2'</span><span class='p'>,</span>
    <span class='nx'>taxon_id</span><span class='o'>:</span> <span class='mi'>9823</span>
  <span class='p'>}</span>
<span class='p'>]</span>"
    %>

    <%= render 'example',
      example_id: "apidocs-example-extra",
      title: "Retrieve all UniProt records containing a single tryptic peptide and return extra information",
      explanation: "<p>This example retrieves all UniProt records containing the tryptic peptide <i class='initialism'>AIPQLEVARPADAYETAEAYR</i>, including additional information fields that are not returned by default. The result is the same as " + link_to("this search", sequence_path("AIPQLEVARPADAYETAEAYR")) + " with the Tryptic Peptide Analysis in the web interface.</p>",
      post_request: "<span class='gp'>$</span> curl -X POST -H <span class='s2'>'Accept: application/json'</span> #{Rails.application.config.api_host}/api/v1/pept2prot \\
-d <span class='s1'>'input[]=AIPQLEVARPADAYETAEAYR'</span> \\
-d <span class='s1'>'extra=true'</span>",
      get_request: "<a href='http://#{Rails.application.config.api_host}/api/v1/pept2prot.json?input[]=AIPQLEVARPADAYETAEAYR&extra=true' target='_blank'>http://#{Rails.application.config.api_host}/api/v1/pept2prot.json?input[]=AIPQLEVARPADAYETAEAYR&amp;extra=true</a>",
      response: "<span class='p'>[</span>
  <span class='p'>{</span>
    <span class='nx'>peptide</span><span class='o'>:</span> <span class='s2'>'AIPQLEVARPADAYETAEAYR'</span><span class='p'>,</span>
    <span class='nx'>uniprot_id</span><span class='o'>:</span> <span class='s2'>'A7A5N6'</span><span class='p'>,</span>
    <span class='nx'>taxon_id</span><span class='o'>:</span> <span class='mi'>411481</span><span class='p'>,</span>
    <span class='nx'>taxon_name</span><span class='o'>:</span> <span class='s2'>'Bifidobacterium adolescentis L2-32'</span><span class='p'>,</span>
    <span class='nx'>ec_references</span><span class='o'>:</span> <span class='s2'>'2.2.1.1'</span><span class='p'>,</span>
    <span class='nx'>go_references</span><span class='o'>:</span> <span class='s2'>''</span>
  <span class='p'>},</span>
  <span class='p'>{</span>
    <span class='nx'>peptide</span><span class='o'>:</span> <span class='s2'>'AIPQLEVARPADAYETAEAYR'</span><span class='p'>,</span>
    <span class='nx'>uniprot_id</span><span class='o'>:</span> <span class='s2'>'A1A1M7'</span><span class='p'>,</span>
    <span class='nx'>taxon_id</span><span class='o'>:</span> <span class='mi'>367928</span><span class='p'>,</span>
    <span class='nx'>taxon_name</span><span class='o'>:</span> <span class='s2'>'Bifidobacterium adolescentis ATCC 15703'</span><span class='p'>,</span>
    <span class='nx'>ec_references</span><span class='o'>:</span> <span class='s2'>''</span><span class='p'>,</span>
    <span class='nx'>go_references</span><span class='o'>:</span> <span class='s2'>''</span>
  <span class='p'>}</span>
<span class='p'>]</span>"
    %>

    <h2 id="try-it">Try it</h2>
    <%= render 'tryit',
      name: "pept2prot",
      input: true,
      equate_il: true,
      extra: true,
      names: false
    %>

  </div>
  <div class="col-xs-3">
    <%= render 'sidebar' %>
  </div>
</div>
