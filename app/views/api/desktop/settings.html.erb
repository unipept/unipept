<div class="apidocs row">
  <div class="col-xs-9">
    <h1 class="api-title">Unipept Desktop - Settings</h1>
    <p class="lead">
      The settings page can be used to tune the performance and behavior of the Unipept Desktop Application.
    </p>
    <div class="full-width-screen">
      <%= image_tag "desktop_docs/desktop_settings.png" %>
    </div>
    <div class="card">
      <div class="card-title card-title-colored">
        <h2 id="change-endpoint" class="card-title-text">Change endpoint</h2>
      </div>
      <div class="card-supporting-text">
        <p>
          The desktop apps needs to connect with a Unipept API endpoint in order to analyse a sample. Peptides are
          being sent to this endpoint for analysis, after which a valid response is produced by the handling server and
          sent back to the application for further processing. Such an endpoint works with a specific version of the
          UniProt database.
        </p>
        <p>
          By changing the address of this field, you can control which endpoint will be used during the analysis and
          ultimately which version of the UniProt database. Note that the selected endpoint must adhere to the Unipept
          API. If required, you can set up your own version of the Unipept backend by cloning our repository. This is
          however only for advanced users.
        </p>
      </div>
    </div>

    <div class="card">
      <div class="card-title card-title-colored">
        <h2 id="concurrency-control" class="card-title-text">Concurrency control</h2>
      </div>
      <div class="card-supporting-text">
        <h3>Long running tasks</h3>
        <p>
          The settings menu also allows you to limit the number of processes that can be simultaneously active. The
          performance of the application can be increased by increasing the number of concurrent processes, but this
          will also increase memory usage.
        </p>
        <div class="apidocs-callout apidocs-callout-info">
          <h4>Max concurrent processes</h4>
          <p>
            Be careful setting this value too high. The application has a built-in limit of 64
            concurrent processes, but it is recommended to not set this value higher than the double the amount of CPU
            cores available in your system.
          </p>
        </div>
        <h3>API requests</h3>
        <p>
          This option determines the maximum amount of requests to the API server that can be made in parallel. The
          higher this value, the higher the load on the selected API endpoint. Increasing this value can sometimes lead
          to faster analyses.
        </p>
        <div class="apidocs-callout apidocs-callout-info">
          <h4>Max parallel API requests</h4>
          <p>
            Be careful setting this value too high. The application has a built-in limit of 10 simultaneous parallel API
            requests in order not to overload the endpoint server. The default value of 5 is very suitable in most
            cases. If your endpoint server, however, is very powerful you can set this to a higher value to increase
            analyses speed.
          </p>
        </div>
      </div>
    </div>
  </div>
  <div class="col-xs-3">
    <%= render 'api/shared/sidebar' %>
  </div>
</div>
