import{I as n}from"./InlineCode-67d03729.js";import{H as l}from"./HeaderBodyCard-3295d4c5.js";import{I as o}from"./Initialism-440d96b0.js";import{B as u,S as i}from"./Boxed-9f9dd66a.js";import{_ as m}from"./ParameterTable.vue_vue_type_script_setup_true_lang-eb31a2e0.js";import{d,o as p,c,w as a,l as f,g as s,b as t,a as e}from"./index-eea28a33.js";import{V as h}from"./VDivider-834b9f8e.js";import"./_plugin-vue_export-helper-c27b6911.js";import"./VCard-9d59c194.js";import"./VRow-94e3f3e6.js";const g=s("h1",{class:"font-weight-light"}," umgap joinkmers ",-1),_={class:"font-weight-light"},B=s("i",null,"standard input",-1),A=s("i",null,"standard output",-1),x=s("b",null,"cat input.tsv",-1),b=s("b",null,"umgap joinkmers taxons.tsv < input.tsv",-1),$=d({__name:"MetagenomicsJoinKmersPage",setup(k){const r=[{name:"-h / --help",description:"Prints help information"},{name:"-V / --version",description:"Prints version information"}];return(I,y)=>(p(),c(f,null,{default:a(()=>[g,s("h3",_,[t(" Aggregates a "),e(o,null,{default:a(()=>[t("TSV")]),_:1}),t(" stream of peptides and taxon IDs ")]),e(h,{class:"my-2"}),s("p",null,[t(" The "),e(n,null,{default:a(()=>[t("umgap joinkmers")]),_:1}),t(" command takes tab-separated peptides and taxon IDs, aggregates the taxon IDs where consecutive peptides are equal and outputs a tab-separated triple of peptide, consensus taxon ID and taxon rank. ")]),e(l,{id:"usage",title:"Usage","large-title":""},{default:a(()=>[s("p",null,[t(" The input is given on "),B,t(". If it is sorted on the first column, a complete mapping from strings to aggregated taxa and its rank will be written to "),A,t(". It is meant to be used after the "),e(n,null,{default:a(()=>[t("umgap splitkmers")]),_:1}),t(" and "),e(n,null,{default:a(()=>[t("sort")]),_:1}),t(" commands, and it's output is ideal for "),e(n,null,{default:a(()=>[t("umgap buildindex")]),_:1}),t(", but there may be further uses. ")]),s("p",null,[t(" The aggregation strategy used in this command to find a consensus taxon is the hybrid approach of the "),e(n,null,{default:a(()=>[t("umgap taxa2agg")]),_:1}),t(" command, with a 95% factor. This keeps the result close to the lowest common ancestor, but filters out some outlying taxa. ")]),s("p",null,[t(" The taxonomy to be used is passed as an argument to this command. This is a preprocessed version of the "),e(o,null,{default:a(()=>[t("NCBI")]),_:1}),t(" taxonomy. ")]),e(u,{style:{"max-height":"fit-content"}},{default:a(()=>[s("pre",null,[t(""),e(i,null,{default:a(()=>[t("$")]),_:1}),t(),x,t(`
AAAAA	34924
AAAAA	30423
AAAAA	5678
BBBBBB	48890
BBBBBB	156563
`),e(i,null,{default:a(()=>[t("$")]),_:1}),t(),b,t(`
AAAAA	2759	superkingdom
BBBBBB	9153	family
`)])]),_:1}),e(m,{class:"mt-5 mb-3",parameters:r})]),_:1})]),_:1}))}});export{$ as default};
