import{I as a}from"./InlineCode-67d03729.js";import{H as r}from"./HeaderBodyCard-3295d4c5.js";import{I as i}from"./Initialism-440d96b0.js";import{B as u,S as s}from"./Boxed-9f9dd66a.js";import{_ as d}from"./ParameterTable.vue_vue_type_script_setup_true_lang-eb31a2e0.js";import{d as p,o as _,c,w as l,l as h,g as e,b as t,a as n}from"./index-eea28a33.js";import{V as m}from"./VDivider-834b9f8e.js";import"./_plugin-vue_export-helper-c27b6911.js";import"./VCard-9d59c194.js";import"./VRow-94e3f3e6.js";const f=e("h1",{class:"font-weight-light"}," umgap prot2tryp ",-1),g={class:"font-weight-light"},T=e("i",null,"in silico",-1),A=e("i",null,"standard input",-1),V=e("i",null,"standard output",-1),b=e("b",null,"cat input.fa",-1),y=e("br",null,null,-1),D=e("br",null,null,-1),w=e("br",null,null,-1),G=e("b",null,"umgap prot2tryp tryptic-lca.index < input.fa",-1),N=e("br",null,null,-1),S=e("br",null,null,-1),K=e("br",null,null,-1),R=e("br",null,null,-1),I=e("br",null,null,-1),L=e("br",null,null,-1),P=e("br",null,null,-1),Y=e("br",null,null,-1),x=e("br",null,null,-1),C=e("br",null,null,-1),v=e("br",null,null,-1),B=e("br",null,null,-1),O=p({__name:"MetagenomicsProt2TrypPage",setup(F){const o=[{name:"-h / --help",description:"Prints help information"},{name:"-V / --version",description:"Prints version information"},{name:"-p / --pattern p",description:"The cleavage-pattern (regex), i.e. the pattern after which the next peptide will be cleaved for tryptic peptides) [default: ([KR])([^P])]"}];return(H,W)=>(_(),c(h,null,{default:l(()=>[f,e("h3",g,[t(" Splits a "),n(i,null,{default:l(()=>[t("FASTA")]),_:1}),t(" stream into tryptic peptides ")]),n(m,{class:"my-2"}),e("p",null,[t(" The "),n(a,null,{default:l(()=>[t("umgap prot2tryp")]),_:1}),t(" command takes one or more amino acid sequences as input and applies an "),T,t(" peptide digest. ")]),n(r,{id:"usage",title:"Usage","large-title":""},{default:l(()=>[e("p",null,[t(" The input is given in a "),n(i,null,{default:l(()=>[t("FASTA")]),_:1}),t(" format on "),A,t(" with a single peptide per "),n(i,null,{default:l(()=>[t("FASTA")]),_:1}),t(" header, which may be hardwrapped with newlines. The peptides resulting from the digest are written in "),n(i,null,{default:l(()=>[t("FASTA")]),_:1}),t(" format to "),V,t(", with multiple peptides per "),n(i,null,{default:l(()=>[t("FASTA")]),_:1}),t(" header, separated by newlines. ")]),n(u,{style:{"max-height":"fit-content"}},{default:l(()=>[n(s,null,{default:l(()=>[t("$")]),_:1}),t(),b,y,t(">header1 "),D,t("AYKKAGVSGHVWQSDGITNCLLRGLTRVKEAVANRDSGNGYINKVYYWTVDKRATTRDALDAGVDGIMTNYPDVITDVLN "),w,n(s,null,{default:l(()=>[t("$")]),_:1}),t(),G,N,t(">header1 "),S,t("AYK "),K,t("K "),R,t("AGVSGHVWQSDGITNCLLR "),I,t("GLTR "),L,t("VK "),P,t("EAVANR "),Y,t("DSGNGYINK "),x,t("VYYWTVDK "),C,t("R "),v,t("ATTR "),B,t("DALDAGVDGIMTNYPDVITDVLN ")]),_:1}),e("p",null,[t(" Using the "),n(a,null,{default:l(()=>[t("-p")]),_:1}),t(" flag, you can change the splitting pattern. The default pattern ("),n(a,null,{default:l(()=>[t("[KR])([^P]")]),_:1}),t(") splits between any Lysine (K) or Arginine (R), followed by any amino acid that is not Proline (P). ")]),n(d,{class:"mt-5 mb-3",parameters:o})]),_:1})]),_:1}))}});export{O as default};
