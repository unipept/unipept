import{I as i}from"./InlineCode-67d03729.js";import{H as p}from"./HeaderBodyCard-3295d4c5.js";import{B as u,S as o}from"./Boxed-9f9dd66a.js";import{R as a}from"./ResourceLink-d34b4283.js";import{S as d}from"./StaticAlert-5833da9d.js";import{I as s}from"./Initialism-440d96b0.js";import{d as r,o as _,c,w as n,l as h,a as l,g as e,b as t,t as f}from"./index-eea28a33.js";import{V as m}from"./VDivider-834b9f8e.js";import"./_plugin-vue_export-helper-c27b6911.js";import"./VCard-9d59c194.js";import"./VAlert-6315e811.js";const b=e("h1",{class:"font-weight-light"}," unipept pept2prot ",-1),I=e("h3",{class:"font-weight-light"}," Returns the set of UniProt entries containing a given tryptic peptide. ",-1),G=e("i",null,"standard input",-1),g=e("h3",null,"Command line arguments",-1),A=e("p",null," If input is supplied using command line arguments, the accession numbers must be separated by spaces. ",-1),S=e("h4",null,"Example",-1),x=e("br",null,null,-1),y=e("br",null,null,-1),K=e("br",null,null,-1),Q=e("br",null,null,-1),D=e("h3",null,"File input",-1),V=e("h4",null,"Example",-1),Y=e("br",null,null,-1),E=e("br",null,null,-1),L=e("br",null,null,-1),T=e("br",null,null,-1),F=e("br",null,null,-1),w=e("br",null,null,-1),M=e("br",null,null,-1),C=e("h3",null,"Standard input",-1),k=e("i",null,"standard input",-1),$=e("i",null,"standard input",-1),W=e("h4",null,"Example",-1),B=e("br",null,null,-1),H=e("br",null,null,-1),R=e("br",null,null,-1),P=e("br",null,null,-1),U=e("br",null,null,-1),v=e("br",null,null,-1),J=e("br",null,null,-1),X=e("i",null,"standard output",-1),q=e("h3",null,"File output",-1),N=e("h4",null,"Example",-1),z=e("br",null,null,-1),O=e("br",null,null,-1),j=e("br",null,null,-1),Z=e("br",null,null,-1),tt=e("br",null,null,-1),et=e("h3",null,"Standard output",-1),nt=e("i",null,"standard output",-1),lt=e("h4",null,"Example",-1),ot=e("br",null,null,-1),it=e("br",null,null,-1),ut=e("br",null,null,-1),st=e("br",null,null,-1),at=e("br",null,null,-1),pt=e("br",null,null,-1),dt=e("br",null,null,-1),rt=e("br",null,null,-1),_t=e("br",null,null,-1),ct=e("br",null,null,-1),ht=e("h4",null,"Example",-1),ft=e("br",null,null,-1),mt=e("br",null,null,-1),bt=e("br",null,null,-1),It=e("br",null,null,-1),Gt=e("br",null,null,-1),gt=e("br",null,null,-1),At=e("br",null,null,-1),St=e("br",null,null,-1),xt=e("br",null,null,-1),yt=e("br",null,null,-1),Kt=e("br",null,null,-1),Qt=e("h2",null,[t("--equate / -e "),e("span",{class:"text-caption grey--text text--darken-2"},"Equate isoleucine and leucine")],-1),Dt=e("i",null,"Equate I and L?",-1),Vt=e("h4",null,"Example",-1),Yt=e("br",null,null,-1),Et=e("br",null,null,-1),Lt=e("br",null,null,-1),Tt=e("br",null,null,-1),Ft=e("b",null,"--equate",-1),wt=e("br",null,null,-1),Mt=e("br",null,null,-1),Ct=e("br",null,null,-1),kt=e("br",null,null,-1),$t=e("br",null,null,-1),Wt=e("br",null,null,-1),Bt=e("br",null,null,-1),Ht=e("br",null,null,-1),Rt=e("br",null,null,-1),Pt=e("h2",null,[t("--input / -i "),e("span",{class:"text-caption grey--text text--darken-2"},"Specify an input file")],-1),Ut=e("i",null,"standard input",-1),vt=e("h4",null,"Example",-1),Jt=e("br",null,null,-1),Xt=e("br",null,null,-1),qt=e("br",null,null,-1),Nt=e("br",null,null,-1),zt=e("b",null,"--input",-1),Ot=e("br",null,null,-1),jt=e("br",null,null,-1),Zt=e("br",null,null,-1),te=e("br",null,null,-1),ee=e("h2",null,[t("--output / -o "),e("span",{class:"text-caption grey--text text--darken-2"},"Specify an output file")],-1),ne=e("i",null,"standard output",-1),le=e("h4",null,"Example",-1),oe=e("b",null,"--output",-1),ie=e("br",null,null,-1),ue=e("br",null,null,-1),se=e("br",null,null,-1),ae=e("br",null,null,-1),pe=e("br",null,null,-1),de=e("h2",null,[t("--select / -s "),e("span",{class:"text-caption grey--text text--darken-2"},"Specify the output fields")],-1),re=e("b",null,"*",-1),_e=e("h4",null,"Example",-1),ce=e("b",null,"--select",-1),he=e("br",null,null,-1),fe=e("br",null,null,-1),me=e("br",null,null,-1),be=e("b",null,"--select",-1),Ie=e("b",null,"--select",-1),Ge=e("br",null,null,-1),ge=e("br",null,null,-1),Ae=e("h2",null,[t("--format / -f "),e("span",{class:"text-caption grey--text text--darken-2"},"Specify the output format")],-1),Se=e("h4",null,"Example",-1),xe=e("b",null,"--format",-1),ye=e("br",null,null,-1),Ke=e("br",null,null,-1),Qe=e("b",null,"--format",-1),De=e("br",null,null,-1),Ve=e("h2",null,[t("--all / -a "),e("span",{class:"text-caption grey--text text--darken-2"},"Request additional information")],-1),Ye=e("h4",null,"Example",-1),Ee=e("b",null,"--all",-1),Le=e("br",null,null,-1),Te=e("br",null,null,-1),Fe=e("br",null,null,-1),we=e("h2",null,[t("--help / -h "),e("span",{class:"text-caption grey--text text--darken-2"},"Display help")],-1),Me=e("p",null," This flag displays the help. ",-1),Ce=e("h4",null,"Example",-1),ke=e("b",null,"--meganize",-1),$e=e("br",null,null,-1),We=e("br",null,null,-1),Be=e("li",null,"Import from blast",-1),He=e("li",null,"Set format to blastTab and mode to blastp",-1),Re=e("li",null,"Remove the fasta mapping that was automatically added",-1),Pe=e("li",null,'Enable the tabs you want (taxonomy/interpro2go/...), but always select the "use accession" option for this',-1),Ue=e("li",null,"Go back to the first tab and make sure it says blasttab and blastp, because sometimes it changes back when you switch tabs",-1),ve=e("li",null,"Click apply",-1),Je="<results><result><peptide>ISVAQGASK</peptide><uniprot_id>Q9Y6R7</uniprot_id><protein_name>IgGFc-binding protein</protein_name><taxon_id>9606</taxon_id></result><result><peptide>ISVAQGASK</peptide><uniprot_id>A0A087WXI2</uniprot_id><protein_name>IgGFc-binding protein</protein_name><taxon_id>9606</taxon_id></result><result><peptide>MDGTEYIIVK</peptide><uniprot_id>C6JD41</uniprot_id><protein_name>10 kDa chaperonin</protein_name><taxon_id>457412</taxon_id></result></results>",an=r({__name:"CLIPept2ProtPage",setup(Xe){return(qe,Ne)=>(_(),c(h,null,{default:n(()=>[b,I,l(m,{class:"my-2"}),e("p",null,[t(" The "),l(i,null,{default:n(()=>[t("unipept pept2prot")]),_:1}),t(" command takes one or more tryptic peptides as input and returns the set of UniProt entries containing the peptides as output. This information is fetched by doing "),l(a,{to:"/apidocs/pept2prot",router:""},{default:n(()=>[l(s,null,{default:n(()=>[t("API")]),_:1}),t("-requests")]),_:1}),t(" to the Unipept server. ")]),l(p,{id:"input",title:"Input","large-title":""},{default:n(()=>[e("p",null,[t(" The "),l(i,null,{default:n(()=>[t("unipept pept2prot")]),_:1}),t(" command expects tryptic peptides as input. The source of this input can be command line arguments, a file, or "),G,t(". If input is supplied using multiple sources at the same time, the order of priority as described above is used. ")]),g,A,S,l(u,null,{default:n(()=>[l(o,null,{default:n(()=>[t("$")]),_:1}),t(" unipept pept2prot MDGTEYIIVK ISVAQGASK "),x,t("peptide,uniprot_id,protein_name,taxon_id "),y,t("MDGTEYIIVK,C6JD41,10 kDa chaperonin,457412 "),K,t("ISVAQGASK,Q9Y6R7,IgGFc-binding protein,9606 "),Q,t("ISVAQGASK,A0A087WXI2,IgGFc-binding protein,9606 ")]),_:1}),D,e("p",null,[t(" Use the "),l(a,{to:"#options",router:""},{default:n(()=>[t("--input parameter")]),_:1}),t(" to specify a file to use as input. If input is supplied using a file, a single peptide per line is expected. ")]),V,l(u,null,{default:n(()=>[l(o,null,{default:n(()=>[t("$")]),_:1}),t(" cat input.txt "),Y,t("MDGTEYIIVK "),E,t("ISVAQGASK "),L,l(o,null,{default:n(()=>[t("$")]),_:1}),t(" unipept pept2prot --input input.txt "),T,t("peptide,uniprot_id,protein_name,taxon_id "),F,t("MDGTEYIIVK,C6JD41,10 kDa chaperonin,457412 "),w,t("ISVAQGASK,Q9Y6R7,IgGFc-binding protein,9606 "),M,t("ISVAQGASK,A0A087WXI2,IgGFc-binding protein,9606 ")]),_:1}),C,e("p",null,[t(" If the command is run without arguments and no file is specified, "),l(i,null,{default:n(()=>[t("unipept pept2prot")]),_:1}),t(" will read its input from "),k,t(". When "),$,t(" is used, a single peptide per line is expected. ")]),W,l(u,null,{default:n(()=>[l(o,null,{default:n(()=>[t("$")]),_:1}),t(" cat input.txt "),B,t("MDGTEYIIVK "),H,t("ISVAQGASK "),R,l(o,null,{default:n(()=>[t("$")]),_:1}),t(" cat input | unipept pept2prot "),P,t("peptide,uniprot_id,protein_name,taxon_id "),U,t("MDGTEYIIVK,C6JD41,10 kDa chaperonin,457412 "),v,t("ISVAQGASK,Q9Y6R7,IgGFc-binding protein,9606 "),J,t("ISVAQGASK,A0A087WXI2,IgGFc-binding protein,9606 ")]),_:1})]),_:1}),l(p,{id:"output",title:"Output",class:"mt-5","large-title":""},{default:n(()=>[e("p",null,[t(" The "),l(i,null,{default:n(()=>[t("unipept pept2prot")]),_:1}),t(" command outputs all UniProt entries that contain the given (tryptic) input peptides. By default, for each of the matching UniProt entries, the accession number, the name of the protein and the "),l(s,null,{default:n(()=>[t("NCBI")]),_:1}),t(" taxon id are returned. By using the "),l(a,{to:"#options",router:""},{default:n(()=>[t("--all parameter")]),_:1}),t(", this can be supplemented with the name of the associated taxon and several cross referenes such as the the associated "),l(s,null,{default:n(()=>[t("EC")]),_:1}),t("-numbers and "),l(s,null,{default:n(()=>[t("GO")]),_:1}),t("-terms. Consult the "),l(a,{to:"/apidocs/pept2prot",router:""},{default:n(()=>[l(s,null,{default:n(()=>[t("API")]),_:1}),t(" documentation")]),_:1}),t(" for a detailed list of output fields. A selection of output fields can be specified with the "),l(a,{to:"#options",router:""},{default:n(()=>[t("--select parameter")]),_:1}),t(". By default, output is generated in csv format. By using the "),l(a,{to:"#options",router:""},{default:n(()=>[t("--format parameter")]),_:1}),t(", the format can be changed into json or xml. The output can be written to a file or to "),X,t(". ")]),q,e("p",null,[t(" Use the "),l(a,{to:"#options",router:""},{default:n(()=>[t("--output parameter")]),_:1}),t(" to specify an output file. If the file aready exists, the output will be appended to the end of the file. ")]),N,l(u,null,{default:n(()=>[l(o,null,{default:n(()=>[t("$")]),_:1}),t(" unipept pept2prot --output output.txt MDGTEYIIVK ISVAQGASK "),z,l(o,null,{default:n(()=>[t("$")]),_:1}),t(" cat output.txt "),O,t("peptide,uniprot_id,protein_name,taxon_id "),j,t("MDGTEYIIVK,C6JD41,10 kDa chaperonin,457412 "),Z,t("ISVAQGASK,Q9Y6R7,IgGFc-binding protein,9606 "),tt,t("ISVAQGASK,A0A087WXI2,IgGFc-binding protein,9606 ")]),_:1}),et,e("p",null,[t(" If no output file is specified, "),l(i,null,{default:n(()=>[t("unipept pept2prot")]),_:1}),t(" will write its output to "),nt,t(". ")]),lt,l(u,null,{default:n(()=>[l(o,null,{default:n(()=>[t("$")]),_:1}),t(" unipept pept2prot MDGTEYIIVK ISVAQGASK "),ot,t("peptide,uniprot_id,protein_name,taxon_id "),it,t("MDGTEYIIVK,C6JD41,10 kDa chaperonin,457412 "),ut,t("ISVAQGASK,Q9Y6R7,IgGFc-binding protein,9606 "),st,t("ISVAQGASK,A0A087WXI2,IgGFc-binding protein,9606 "),at,l(o,null,{default:n(()=>[t("$")]),_:1}),t(" unipept pept2prot MDGTEYIIVK ISVAQGASK > output.txt "),pt,l(o,null,{default:n(()=>[t("$")]),_:1}),t(" cat output.txt "),dt,t("peptide,uniprot_id,protein_name,taxon_id "),rt,t("MDGTEYIIVK,C6JD41,10 kDa chaperonin,457412 "),_t,t("ISVAQGASK,Q9Y6R7,IgGFc-binding protein,9606 "),ct,t("ISVAQGASK,A0A087WXI2,IgGFc-binding protein,9606 ")]),_:1})]),_:1}),l(p,{id:"fasta",title:"Fasta support",class:"mt-5","large-title":""},{default:n(()=>[e("p",null,[t(" The "),l(i,null,{default:n(()=>[t("unipept pept2prot")]),_:1}),t(" command supports input (from any source) in a fasta-like format (for example generated by the "),l(a,{to:"/clidocs/prot2pept",router:""},{default:n(()=>[t("prot2pept command")]),_:1}),t("). This format consists of a fasta header (a line starting with a >), followed by one or more lines containing one peptide each. When this format is detected, the output will automatically include an extra information field containing the corresponding fasta header. ")]),ht,l(u,null,{default:n(()=>[l(o,null,{default:n(()=>[t("$")]),_:1}),t(" cat input.txt "),ft,t("> header 1 "),mt,t("ISVAQGASK "),bt,t("MDGTEYIIVK "),It,t("> header 2 "),Gt,t("ISVAQGASK "),gt,l(o,null,{default:n(()=>[t("$")]),_:1}),t(" unipept pept2prot --input input.txt "),At,t("fasta_header,peptide,uniprot_id,protein_name,taxon_id "),St,t("> header 1,MDGTEYIIVK,C6JD41,10 kDa chaperonin,457412 "),xt,t("> header 1,ISVAQGASK,Q9Y6R7,IgGFc-binding protein,9606 "),yt,t("> header 1,ISVAQGASK,A0A087WXI2,IgGFc-binding protein,9606 "),Kt,t("> header 2,MDGTEYIIVK,C6JD41,10 kDa chaperonin,457412 ")]),_:1})]),_:1}),l(p,{id:"options",title:"Command-line options",class:"mt-5","large-title":""},{default:n(()=>[Qt,e("p",null,[t(" If the "),l(i,null,{default:n(()=>[t("--equate")]),_:1}),t(" flag is set, isoleucine (I) and leucine (L) are equated when matching tryptic peptides to UniProt entries. This is similar to checking the "),Dt,t(" checkbox when performing a search in the Unipept web interface. ")]),Vt,l(u,null,{default:n(()=>[l(o,null,{default:n(()=>[t("$")]),_:1}),t(" unipept pept2prot FEALLGDGSQYGLHLQYK "),Yt,t("peptide,uniprot_id,protein_name,taxon_id "),Et,t("FEALLGDGSQYGLHLQYK,D1PLT2,Glucose-1-phosphate thymidylyltransferase,411471 "),Lt,t('FEALLGDGSQYGLHLQYK,K1TWG3,"Glucose-1-phosphate thymidylyltransferase, long form",408170 '),Tt,l(o,null,{default:n(()=>[t("$")]),_:1}),t(" unipept pept2prot "),Ft,t(" FEALLGDGSQYGLHLQYK "),wt,t("peptide,uniprot_id,protein_name,taxon_id "),Mt,t("FEALLGDGSQYGLHLQYK,D4K7A9,Glucose-1-phosphate thymidylyltransferase,657322 "),Ct,t("FEALLGDGSQYGLHLQYK,D4K112,Glucose-1-phosphate thymidylyltransferase,718252 "),kt,t("FEALLGDGSQYGLHLQYK,D1PLT2,Glucose-1-phosphate thymidylyltransferase,411471 "),$t,t("FEALLGDGSQYGLHLQYK,A8SH27,Glucose-1-phosphate thymidylyltransferase,411485 "),Wt,t('FEALLGDGSQYGLHLQYK,K1TWG3,"Glucose-1-phosphate thymidylyltransferase, long form",408170 '),Bt,t("FEALLGDGSQYGLHLQYK,E2ZLF5,Glucose-1-phosphate thymidylyltransferase,748224 "),Ht,t("FEALLGDGSQYGLHLQYK,R6Q2J6,Glucose-1-phosphate thymidylyltransferase,1262898 "),Rt,t("FEALLGDGSQYGLHLQYK,C7HAW8,Glucose-1-phosphate thymidylyltransferase,411483 ")]),_:1}),Pt,e("p",null,[t(" All Unipept "),l(s,null,{default:n(()=>[t("CLI")]),_:1}),t(" commands can process input from 3 sources: command line arguments, a file, or "),Ut,t(". The optional "),l(i,null,{default:n(()=>[t("--input")]),_:1}),t(" option allows you to specify an input file. The file should contain a single peptide per line. ")]),vt,l(u,null,{default:n(()=>[l(o,null,{default:n(()=>[t("$")]),_:1}),t(" cat input.txt "),Jt,t("ISVAQGASK "),Xt,t("OMGWTFBBQ "),qt,t("MDGTEYIIVK "),Nt,l(o,null,{default:n(()=>[t("$")]),_:1}),t(" unipept pept2prot "),zt,t(" input.txt "),Ot,t("peptide,uniprot_id,protein_name,taxon_id "),jt,t("ISVAQGASK,Q9Y6R7,IgGFc-binding protein,9606 "),Zt,t("ISVAQGASK,A0A087WXI2,IgGFc-binding protein,9606 "),te,t("MDGTEYIIVK,C6JD41,10 kDa chaperonin,457412 ")]),_:1}),ee,e("p",null,[t(" By default, the unipept commands write their output to "),ne,t(". Using the optional "),l(i,null,{default:n(()=>[t("--output")]),_:1}),t(" option allows you to specify a file to write the output to. If the file already exists, the output will be appended; if it doesn't, a new file will be created. ")]),le,l(u,null,{default:n(()=>[l(o,null,{default:n(()=>[t("$")]),_:1}),t(" unipept pept2prot "),oe,t(" output.txt ISVAQGASK MDGTEYIIVK "),ie,l(o,null,{default:n(()=>[t("$")]),_:1}),t(" cat output.txt "),ue,t("peptide,uniprot_id,protein_name,taxon_id "),se,t("ISVAQGASK,Q9Y6R7,IgGFc-binding protein,9606 "),ae,t("ISVAQGASK,A0A087WXI2,IgGFc-binding protein,9606 "),pe,t("MDGTEYIIVK,C6JD41,10 kDa chaperonin,457412 ")]),_:1}),de,e("p",null,[t(" By default, the Unipept "),l(s,null,{default:n(()=>[t("CLI")]),_:1}),t(" commands output all information fields received from the Unipept server. The "),l(i,null,{default:n(()=>[t("--select")]),_:1}),t(" option allows you to control which fields are returned. A list of fields can be specified by a comma-separated list, or by using multiple "),l(i,null,{default:n(()=>[t("--select")]),_:1}),t(" options. A "),re,t(" can be used as a wildcard for field names. For example, "),l(i,null,{default:n(()=>[t("--select peptide,taxon*")]),_:1}),t(" will return the peptide field and all fields starting with taxon. ")]),_e,l(u,null,{default:n(()=>[l(o,null,{default:n(()=>[t("$")]),_:1}),t(" unipept pept2prot "),ce,t(" peptide,uniprot_id MDGTEYIIVK "),he,t("peptide,uniprot_id "),fe,t("MDGTEYIIVK,C6JD41 "),me,l(o,null,{default:n(()=>[t("$")]),_:1}),t(" unipept pept2prot "),be,t(" peptide "),Ie,t(" *id MDGTEYIIVK "),Ge,t("peptide,uniprot_id,taxon_id "),ge,t("MDGTEYIIVK,C6JD41,457412 ")]),_:1}),Ae,e("p",null,[t(" By default, the Unipept "),l(s,null,{default:n(()=>[t("CLI")]),_:1}),t(" commands return their output in csv format. The "),l(i,null,{default:n(()=>[t("--format")]),_:1}),t(" option allows you to select another format. Supported formats are csv, json, and xml. ")]),Se,l(u,null,{default:n(()=>[l(o,null,{default:n(()=>[t("$")]),_:1}),t(" unipept pept2prot "),xe,t(" json ISVAQGASK MDGTEYIIVK "),ye,t('[{"peptide":"ISVAQGASK","uniprot_id":"Q9Y6R7","protein_name":"IgGFc-binding protein","taxon_id":9606},{"peptide":"ISVAQGASK","uniprot_id":"A0A087WXI2","protein_name":"IgGFc-binding protein","taxon_id":9606},{"peptide":"MDGTEYIIVK","uniprot_id":"C6JD41","protein_name":"10 kDa chaperonin","taxon_id":457412}] '),Ke,l(o,null,{default:n(()=>[t("$")]),_:1}),t(" unipept pept2prot "),Qe,t(" xml ISVAQGASK MDGTEYIIVK "),De,t(f(Je))]),_:1}),Ve,e("p",null,[t(" By default, the Unipept "),l(s,null,{default:n(()=>[t("CLI")]),_:1}),t(" commands only request basic information from the Unipept server. By using the "),l(i,null,{default:n(()=>[t("--all")]),_:1}),t(" flag, you can request additional information fields such as the lineage of the returned taxa. You can use the "),l(i,null,{default:n(()=>[t("--select")]),_:1}),t(" option to select which fields are included in the output. ")]),l(d,{title:"Performance penalty"},{default:n(()=>[e("p",null,[t(" Setting "),l(i,null,{default:n(()=>[t("--all")]),_:1}),t(" has a performance penalty inferred from additional database queries. Do not use this parameter unless the extra information fields are needed. ")])]),_:1}),Ye,l(u,null,{default:n(()=>[l(o,null,{default:n(()=>[t("$")]),_:1}),t(" unipept pept2prot "),Ee,t(" --select peptide,uniprot_id,*name,go_references ISVAQGASK "),Le,t("peptide,uniprot_id,protein_name,taxon_name,go_references "),Te,t("ISVAQGASK,Q9Y6R7,IgGFc-binding protein,Homo sapiens,GO:0070062 "),Fe,t("ISVAQGASK,A0A087WXI2,IgGFc-binding protein,Homo sapiens, ")]),_:1}),we,Me]),_:1}),l(p,{title:"Meganize",class:"mt-5","large-title":""},{default:n(()=>[e("p",null,[t(" The "),l(i,null,{default:n(()=>[t("unipept pept2prot")]),_:1}),t(" command can be used in combination with Megan, for example to perform a functional analysis of the sample. This requires using the "),l(i,null,{default:n(()=>[t("--meganize")]),_:1}),t(" option that was added in version 1.2.0. ")]),Ce,l(u,null,{default:n(()=>[l(o,null,{default:n(()=>[t("$")]),_:1}),t(" unipept pept2prot "),ke,t(" MDGTEYIIVK ISVAQGASK "),$e,t("MDGTEYIIVK ref|WP_008705701.1| 100 10 0 0 0 10 0 10 1e-100 100 "),We,t("ISVAQGASK ref|NP_003881.2 XP_011547112.1 XP_011547113.1| 100 10 0 0 0 10 0 10 1e-100 100 ")]),_:1}),e("p",null,[t(" The generated output can be saved to a file and imported into Megan using the following settings: "),e("ul",null,[Be,e("li",null,[t("Select the file with the "),l(i,null,{default:n(()=>[t("unipept pept2prot --meganize")]),_:1}),t(" output")]),He,Re,Pe,Ue,ve])])]),_:1})]),_:1}))}});export{an as default};
