import{H as h}from"./HeaderBodyCard-3295d4c5.js";import{R as u}from"./ResourceLink-d34b4283.js";import{B as p,S as o}from"./Boxed-9f9dd66a.js";import{I as a}from"./InlineCode-67d03729.js";import{I as l}from"./Initialism-440d96b0.js";import{_ as m}from"./ImageCaptionCard.vue_vue_type_script_setup_true_lang-dcecb080.js";import{d as b,o as g,c as A,w as n,l as y,a as i,g as t,b as e,u as f,t as d,e as v,f as V,F as w,p as G,q as L}from"./index-eea28a33.js";import{_ as x}from"./_plugin-vue_export-helper-c27b6911.js";import"./VCard-9d59c194.js";const I="/assets/casestudy-mpa-shotgun-mpa-ee88d57e.jpg",S="/assets/casestudy-mpa-treeview-8441d413.png",T="/assets/casestudy-mpa-request-213f7909.png",s=c=>(G("data-v-4d30876f"),c=c(),L(),c),k=s(()=>t("h1",{class:"font-weight-light"}," Case study: Taxonomic analysis of a tryptic peptide ",-1)),P=s(()=>t("h3",{class:"font-weight-light"}," This case study describes how the Unipept command line tools can be used for the taxonomic analysis of a single tryptic peptide. ",-1)),E=s(()=>t("sup",null,"11",-1)),K=s(()=>t("p",null," Recently, we have been aided by the development of molecular tools that enable us to determine the composition of microorganisms inhabiting the intestine without having to cultivate them. In addition to the increasing amounts of information about the identities of microorganisms in the gut from our own studies and others, there have been a limited number of studies of the functional genes in the entire gut microbial metagenome, using sequencing based metagenomics approaches. ",-1)),C=s(()=>t("i",null,"Shotgun proteomics",-1)),Q=s(()=>t("b",null,"Figure 1",-1)),D=s(()=>t("br",null,null,-1)),M=s(()=>t("br",null,null,-1)),U=s(()=>t("br",null,null,-1)),N=s(()=>t("br",null,null,-1)),R=s(()=>t("b",null,"--host 'api.unipept.ugent.be'",-1)),B=s(()=>t("br",null,null,-1)),q=s(()=>t("br",null,null,-1)),F=s(()=>t("br",null,null,-1)),$=s(()=>t("b",null,"config host 'api.unipept.ugent.be'",-1)),Y=s(()=>t("br",null,null,-1)),J=s(()=>t("br",null,null,-1)),H=s(()=>t("br",null,null,-1)),j=s(()=>t("i",null,"shotgun metaproteomics",-1)),O=s(()=>t("br",null,null,-1)),z=s(()=>t("br",null,null,-1)),W=s(()=>t("br",null,null,-1)),X=s(()=>t("br",null,null,-1)),Z=s(()=>t("br",null,null,-1)),ee=s(()=>t("br",null,null,-1)),te=s(()=>t("br",null,null,-1)),ne=s(()=>t("br",null,null,-1)),ie=s(()=>t("br",null,null,-1)),se=s(()=>t("br",null,null,-1)),ae=s(()=>t("br",null,null,-1)),oe=s(()=>t("br",null,null,-1)),le=s(()=>t("br",null,null,-1)),re=s(()=>t("br",null,null,-1)),ue=s(()=>t("i",null,"missed cleavages",-1)),de=s(()=>t("i",null,"in silico",-1)),pe=s(()=>t("i",null,"shotgun metaproteomics",-1)),ce=s(()=>t("i",null,"in silico",-1)),he=s(()=>t("i",null,"client side",-1)),me=s(()=>t("br",null,null,-1)),fe=s(()=>t("br",null,null,-1)),_e=s(()=>t("b",null,"prot2pept",-1)),ge=s(()=>t("br",null,null,-1)),be=s(()=>t("br",null,null,-1)),Ae=s(()=>t("b",null,"pept2lca",-1)),ye=s(()=>t("br",null,null,-1)),ve=s(()=>t("br",null,null,-1)),Ve=s(()=>t("br",null,null,-1)),we=s(()=>t("br",null,null,-1)),Ge=s(()=>t("br",null,null,-1)),Le=s(()=>t("br",null,null,-1)),xe=s(()=>t("br",null,null,-1)),Ie=s(()=>t("br",null,null,-1)),Se=s(()=>t("br",null,null,-1)),Te=s(()=>t("br",null,null,-1)),ke=s(()=>t("br",null,null,-1)),Pe=s(()=>t("br",null,null,-1)),Ee=s(()=>t("b",null,"peptfilter",-1)),Ke=s(()=>t("br",null,null,-1)),Ce=s(()=>t("br",null,null,-1)),Qe=s(()=>t("br",null,null,-1)),De=s(()=>t("br",null,null,-1)),Me=s(()=>t("br",null,null,-1)),Ue=s(()=>t("br",null,null,-1)),Ne=s(()=>t("br",null,null,-1)),Re=s(()=>t("br",null,null,-1)),Be=s(()=>t("br",null,null,-1)),qe=s(()=>t("br",null,null,-1)),Fe=s(()=>t("br",null,null,-1)),$e=s(()=>t("br",null,null,-1)),Ye=s(()=>t("br",null,null,-1)),Je=s(()=>t("br",null,null,-1)),He=s(()=>t("i",null,"Metagenomics Analysis",-1)),je=s(()=>t("i",null,"comma separated values",-1)),Oe=s(()=>t("i",null,"Advanced missed cleavage handling",-1)),ze=s(()=>t("b",null,"Figure 2",-1)),We=s(()=>t("i",null,"comma separated values",-1)),Xe=s(()=>t("i",null,"Advanced missed cleavage handling",-1)),Ze=s(()=>t("i",null,"IO redirection",-1)),et=s(()=>t("b",null,"--input",-1)),tt=s(()=>t("b",null,"--output",-1)),nt=s(()=>t("i",null,"Clostridiales",-1)),it=s(()=>t("i",null,"Treeview",-1)),st=s(()=>t("b",null,"Figure 3",-1)),at=s(()=>t("i",null,"Clostridiales",-1)),ot=s(()=>t("h2",{class:"font-weight-light mt-5"}," References ",-1)),lt=b({__name:"CLIMetaproteomicsCaseStudy",setup(c){const r={dicksved:{full:"Dicksved, J., Halfvarson, J., Rosenquist, M., Järnerot, G., Tysk, C., Apajalahti, J., ... & Jansson, J. K. (2008). Molecular analysis of the gut microbiota of identical twins with Crohn's disease. The ISME journal, 2(7), 716-727.",short:"Dicksved et al. (2008)"},kolmeder:{full:"Kolmeder, C. A., & de Vos, W. M. (2014). Metaproteomics of our microbiome — developing insight in function and activity in man and model systems. Journal of proteomics, 97, 3-16.",short:"Kolmeder & de Vos (2014)"},seifert:{full:"Seifert, J., Herbst, F. A., Halkjær Nielsen, P., Planes, F. J., Jehmlich, N., Ferrer, M., & Bergen, M. (2013). Bioinformatic progress and applications in metaproteogenomics for bridging the gap between genomic sequences and metabolic functions in microbial communities. Proteomics, 13(18-19), 2786-2804.",short:"Seifert et al. (2013)"},verberkmoes:{full:"Verberkmoes, N. C., Russell, A. L., Shah, M., Godzik, A., Rosenquist, M., Halfvarson, J., ... & Jansson, J. K. (2009). Shotgun metaproteomics of the human distal gut microbiota. The ISME journal, 3(2), 179-189.",short:"Verberkmoes et al. (2009)"}};return(rt,ut)=>(g(),A(y,null,{default:n(()=>[k,P,i(h,{class:"mt-5",title:"Introduction","large-title":""},{default:n(()=>[t("p",null,[e(" Over the period of evolution, we human beings have co-evolved an intricate symbiosis with microorganisms that inhabit our gastrointestinal tract. These microorganisms are responsible for maintaining a healthy gut environment, they aid in digestion of our food and our immune system and they guard us against invading pathogens. In addition, some diseases, such as "),i(u,{to:"https://en.wikipedia.org/wiki/Crohn%27s_disease"},{default:n(()=>[e("Crohn's disease")]),_:1}),e(", are somehow correlated to the composition of the gut microbiota. Although we are dependent on microorganisms for normal gut functioning, much remains to be learned about microbial processes in the gut that are carried out by this huge community of largely unexplored microbial cells that can amount to numbers as great as 10"),E,e(" per gram of faeces. ")]),K,t("p",null,[e(" A next step is to determine what genes are actually expressed and the function of the gut microbiota in different states of health and disease. "),C,e(" ("),i(u,{to:"#fig1",router:""},{default:n(()=>[e("Figure 1")]),_:1}),e(") is one approach that can be used to determine what proteins were expressed in an environmental sample. As of today, this technique is still in its infancy, but given the rapid technological developments and based on the results of the first analyses, we can nevertheless consider this to be a very promising technique. ")]),i(m,{id:"fig1",class:"mb-5",image:f(I)},{default:n(()=>[Q,e(" Shotgun metaproteomics approach used to identify microbial proteins in human faecal samples. Taken from "+d(r.verberkmoes.short)+". ",1)]),_:1},8,["image"])]),_:1}),i(h,{class:"mt-5",title:"Getting started","large-title":""},{default:n(()=>[t("p",null,[e(" Before the Unipept command line interface ("),i(l,null,{default:n(()=>[e("CLI")]),_:1}),e(") can be used, it first needs to be "),i(u,{to:"/clidocs",router:""},{default:n(()=>[e("installed locally")]),_:1}),e(". Since the commands of the "),i(l,null,{default:n(()=>[e("CLI")]),_:1}),e(" are implemented in Ruby, the "),i(u,{to:"https://www.ruby-lang.org/en/downloads/"},{default:n(()=>[e("Ruby environment")]),_:1}),e(" must be installed first (at least version 2.3). The Unipept "),i(l,null,{default:n(()=>[e("CLI")]),_:1}),e(" can then be installed using the "),i(a,null,{default:n(()=>[e("gem")]),_:1}),e(" command, which is the RubyGems package manager for the Ruby programming language. ")]),i(p,null,{default:n(()=>[i(o,null,{default:n(()=>[e("$")]),_:1}),e(" gem install unipept "),D,e("Successfully installed unipept-2.2.1 "),M,e("1 gem installed "),U,e("Installing ri documentation for unipept-2.2.1... "),N,e("Installing RDoc documentation for unipept-2.2.1... ")]),_:1}),t("p",null,[e(" By default, the "),i(a,null,{default:n(()=>[e("gem")]),_:1}),e(" command installs the Unipept "),i(l,null,{default:n(()=>[e("CLI")]),_:1}),e(" for all users on the computer system. To make a personal installation or in case you don't have the necessary permissions for the appropriate directories to make a system-wide installation, you can use the option "),i(a,null,{default:n(()=>[e("--user-install")]),_:1}),e(" of the "),i(a,null,{default:n(()=>[e("gem")]),_:1}),e(" command. ")]),t("p",null,[e(" The Unipept "),i(l,null,{default:n(()=>[e("CLI")]),_:1}),e(" is a bundle of different commands that all come with detailed "),i(u,{to:"/clidocs",router:""},{default:n(()=>[e("online documentation")]),_:1}),e(". Naturally, the most important command is "),i(a,null,{default:n(()=>[e("unipept")]),_:1}),e(". ")]),i(p,null,{default:n(()=>[t("pre",null,[e(""),i(o,null,{default:n(()=>[e("$")]),_:1}),e(` unipept --help
NAME
unipept - Command line interface to Unipept web services.

USAGE
unipept subcommand [options]

DESCRIPTION
The unipept subcommands are command line wrappers around the Unipept web
services.

Subcommands that start with pept expect a list of tryptic peptides as
input. Subcommands that start with tax expect a list of NCBI Taxonomy
Identifiers as input. Input is passed

- as separate command line arguments
- in a text file that is passed as an argument to the -i option
- to standard input

The command will give priority to the first way the input is passed, in
the order as listed above. Text files and standard input should have one
tryptic peptide or one NCBI Taxonomy Identifier per line.

COMMANDS
config        Set configuration options.
help          show help
pept2lca      Fetch taxonomic lowest common ancestor of UniProt entries that match tryptic peptides.
pept2prot     Fetch UniProt entries that match tryptic peptides.
pept2taxa     Fetch taxa of UniProt entries that match tryptic peptides.
taxa2lca      Compute taxonomic lowest common ancestor for given list of taxa.
taxonomy      Fetch taxonomic information from Unipept Taxonomy.

OPTIONS
-f --format=<value>         define the output format (available: json, csv, xml) (default: csv)
-h --help                   show help for this command
--host=<value>              specify the server running the Unipept webservice
-i --input=<value>          read input from file
-o --output=<value>         write output to file
-q --quiet                  disable service messages
-v --version                displays the version
`)])]),_:1}),t("p",null,[e(" As the "),i(a,null,{default:n(()=>[e("unipept")]),_:1}),e(" command makes calls to the Unipept "),i(l,null,{default:n(()=>[e("API")]),_:1}),e(" that is provided by an instance of the Unipept application server (web services that communicate with an instance of the Unipept database), the location of the Unipept application server must be "),i(u,{to:"/clidocs",router:""},{default:n(()=>[e("configured")]),_:1}),e(". By default, the public Unipept server (api.unipept.ugent.be) is used, but this can be changed by passing the "),i(l,null,{default:n(()=>[e("URL")]),_:1}),e(" of the server as an argument to the option "),i(a,null,{default:n(()=>[e("--host")]),_:1}),e(". To avoid that a custom server needs to be specified with each use of the "),i(a,null,{default:n(()=>[e("unipept")]),_:1}),e(" command, a custom server can be set as default using the "),i(a,null,{default:n(()=>[e("unipept config")]),_:1}),e(" subcommand. A server set with the "),i(a,null,{default:n(()=>[e("--host")]),_:1}),e(" option always overrides the default server. ")]),i(p,null,{default:n(()=>[i(o,null,{default:n(()=>[e("$")]),_:1}),e(" unipept "),R,e(" pept2lca ENFVYIAK "),B,e("peptide,taxon_id,taxon_name,taxon_rank "),q,e("ENFVYIAK,35493,Streptophyta,phylum "),F,i(o,null,{default:n(()=>[e("$")]),_:1}),e(" unipept "),$,Y,i(o,null,{default:n(()=>[e("$")]),_:1}),e(" unipept pept2lca ENFVYIAK "),J,e("peptide,taxon_id,taxon_name,taxon_rank "),H,e("ENFVYIAK,35493,Streptophyta,phylum ")]),_:1})]),_:1}),i(h,{class:"mt-5",title:"Taxonomic analysis","large-title":""},{default:n(()=>[t("p",null,[e(" As a demonstration of the Unipept "),i(l,null,{default:n(()=>[e("CLI")]),_:1}),e(" we show how it can be used to get insight into the biodiversity within one of the faecal samples from a gut microbiome study ("+d(r.verberkmoes.short)+"). The sample was taken from a female that is part of a healthy monozygotic twin pair born in 1951 that was invited to take part in a larger double-blinded study. Details of this individual with respect to diet, antibiotic usage, and so on are described by "+d(r.dicksved.short)+" (individual 6a in this study, sample 7 in the study of "+d(r.verberkmoes.short)+"). The most important that we learn from the available information in the questionnaire that this individual has filled up, is that she had gastroenteritis at the time the sample was taken and that her twin sister (individual 6b in the study of "+d(r.dicksved.short)+", sample 7 in the study of "+d(r.verberkmoes.short)+") had taken non-steroidal anti-inflammatory drugs during the past 12 months before the time of sampling. The data can be downloaded from the ",1),i(u,{to:"https://www.nature.com/articles/ismej2008108#bib7"},{default:n(()=>[e("website of the study")]),_:1}),e(" and is also available as a demo data set on the Unipept website. ")]),t("p",null,[e(" Say that we stored the list of tryptic peptides that were extracted from sample 7 in the study of "+d(r.verberkmoes.short)+" in the text file ",1),i(u,{to:"/sample7.dat",target:"_blank"},{default:n(()=>[e("sample7.dat")]),_:1}),e(". The file contains a list of all tryptic peptides, each on a separate line. The following session shows that this file contains a list of 3983 tryptic peptides (2065 unique peptides) that could be identified in the faecal sample using "),j,e(". ")]),i(p,null,{default:n(()=>[i(o,null,{default:n(()=>[e("$")]),_:1}),e(" head sample7.dat "),O,e("SGIVLPGQAQEKPQQAEVVAVGPGGVVDGK "),z,e("SGIVLPGQAQEKPQQAEVVAVGPGGVVDGK "),W,e("SGIVLPGQAQEKPQQAEVVAVGPGGVVDGKEVK "),X,e("MEVAVGDKVIYSK "),Z,e("MDGTEYIIVK "),ee,e("GLTAAIEAADAMTK "),te,e("AAEVALVGTEK "),ne,e("IGSGLVTVMVR "),ie,e("IGSGLVTVMVR "),se,e("AAVESGSAAASR "),ae,i(o,null,{default:n(()=>[e("$")]),_:1}),e(" wc -l sample7.dat "),oe,e("3983 sample7.dat "),le,i(o,null,{default:n(()=>[e("$")]),_:1}),e(" sort -u sample7.dat | wc -l "),re,e("2065 ")]),_:1}),t("p",null,[e(" The first thing that strikes the eye is that a mass spectrometer might pick up multiple copies of the same tryptic peptide from an environmental sample. Depending on the fact whether or not we can draw quantitative conclusion on the number of different identifications of a particular peptide (apart from identification, the quantification of proteins in an environmental sample is an important research theme ("+d(r.seifert.short)+"; "+d(r.kolmeder.short)+")), we might decide to deduplicate the peptides before they are analysed further using the Unipept ",1),i(l,null,{default:n(()=>[e("CLI")]),_:1}),e(". This decision has an impact on the analysis results, but deduplication also results in improved performance since it avoids duplicate work. ")]),t("p",null,[e(" What might be less obvious at first sight, is that the peptides on lines 3 and 4 in the text file "),i(u,{to:"/sample7.dat",target:"_blank"},{default:n(()=>[e("sample7.dat")]),_:1}),e(" actually aren't tryptic peptides, but the composition of two tryptic peptides. This is a consequence of the fact that cleavage of proteins using trypsin is not always perfect, leading to some proteins that aren't cleaved properly. Such composed tryptic peptides are called "),ue,e(". The index structure underpinning Unipept only indexes tryptic peptides that result from an "),de,e(" trypsin digest of the proteins in UniProt, so that missed cleavages cannot be matched directly by Unipept. ")]),t("p",null,[e(" To cope with this problem, we can start to check if the peptides resulting from a "),pe,e(" experiment need to be cleaved further before making taxonomic identifications using Unipept. Performing an "),ce,e(" trypsin digest can be done using the "),i(a,null,{default:n(()=>[e("prot2pept")]),_:1}),e(" command from the Unipept "),i(l,null,{default:n(()=>[e("CLI")]),_:1}),e(". This command is executed purely "),he,e(", and thus is provided as a standalone command and not as a subcommand of the "),i(a,null,{default:n(()=>[e("unipept")]),_:1}),e(" command. ")]),i(p,null,{default:n(()=>[i(o,null,{default:n(()=>[e("$")]),_:1}),e(" sed -ne '4{p;q}' sample7.dat "),me,e("MEVAVGDKVIYSK "),fe,i(o,null,{default:n(()=>[e("$")]),_:1}),e(" sed -ne '4{p;q}' sample7.dat | "),_e,ge,e("MEVAVGDK "),be,e("VIYSK ")]),_:1}),t("p",null,[e(" Once a peptide is broken into multiple tryptic peptides, the lowest common ancestor can be computed for each tryptic peptide using the "),i(a,null,{default:n(()=>[e("unipept pept2lca")]),_:1}),e(" command. Next to accepting tryptic peptides as arguments, the command can also read one ore more tryptic peptides from standard input if no arguments were passed. Each tryptic peptide should be on a separate line when using standard input. ")]),i(p,null,{default:n(()=>[i(o,null,{default:n(()=>[e("$")]),_:1}),e(" unipept "),Ae,e(" -e SGIVLPGQAQEKPQQAEVVAVGPGGVVDGK MDGTEYIIVK "),ye,e("peptide,taxon_id,taxon_name,taxon_rank "),ve,e("SGIVLPGQAQEKPQQAEVVAVGPGGVVDGK,1263,Ruminococcus,genus "),Ve,e("MDGTEYIIVK,1263,Ruminococcus,genus "),we,i(o,null,{default:n(()=>[e("$")]),_:1}),e(" sed -ne '3{p;q}' sample7.dat "),Ge,e("SGIVLPGQAQEKPQQAEVVAVGPGGVVDGKEVK "),Le,i(o,null,{default:n(()=>[e("$")]),_:1}),e(" sed -ne '3{p;q}' sample7.dat | unipept pept2lca -e "),xe,i(o,null,{default:n(()=>[e("$")]),_:1}),e(" sed -ne '3{p;q}' sample7.dat | prot2pept "),Ie,e("SGIVLPGQAQEKPQQAEVVAVGPGGVVDGK "),Se,e("EVK "),Te,i(o,null,{default:n(()=>[e("$")]),_:1}),e(" sed -ne '3{p;q}' sample7.dat | prot2pept | unipept pept2lca -e "),ke,e("peptide,taxon_id,taxon_name,taxon_rank "),Pe,e("SGIVLPGQAQEKPQQAEVVAVGPGGVVDGK,1263,Ruminococcus,genus ")]),_:1}),t("p",null,[e(" Unipept only indexes tryptic peptides extracted from UniProt sequences that have a length between 5 and 50 amino acids (boundaries included). This choice was driven by the detection limits of most common mass spectrometers. As a result, an additional time saver is to search for tryptic peptides that have less than 5 of more than 50 amino acids, because Unipept will never find protein matches for these peptides. The "),i(a,null,{default:n(()=>[e("peptfilter")]),_:1}),e(" command from the Unipept "),i(l,null,{default:n(()=>[e("CLI")]),_:1}),e(" can be used to filter out peptides that are too short or too long prior to the taxonomic identification step. By default, it filters out all peptides for which it is known in advance that Unipept will find no matches. ")]),i(p,null,{default:n(()=>[i(o,null,{default:n(()=>[e("$")]),_:1}),e(" sed -ne '3{p;q}' sample7.dat | prot2pept | "),Ee,e(" | unipept pept2lca -e "),Ke,e("peptide,taxon_id,taxon_name,taxon_rank "),Ce,e("SGIVLPGQAQEKPQQAEVVAVGPGGVVDGK,1263,Ruminococcus,genus ")]),_:1}),t("p",null,[e(" All commands of the Unipept "),i(l,null,{default:n(()=>[e("CLI")]),_:1}),e(" follow the input/output paradigm of the Unix command line, so that they be chained together seamlessly. This way, for example, we can determine the "),i(l,null,{default:n(()=>[e("LCA")]),_:1}),e("s for the first six peptides of sample 7 by combining the previous processing steps: split missed cleavages, filter out peptides that are too short or too long, equate leucine (residue CodeL) and isoleucine (residue "),i(a,null,{default:n(()=>[e("I")]),_:1}),e("), and deduplicate the tryptic peptides. ")]),i(p,null,{default:n(()=>[i(o,null,{default:n(()=>[e("$")]),_:1}),e(" head -n6 sample7.dat | prot2pept | peptfilter | tr I L | sort -u "),Qe,e("GLTAALEAADAMTK "),De,e("MDGTEYLLVK "),Me,e("MEVAVGDK "),Ue,e("SGLVLPGQAQEKPQQAEVVAVGPGGVVDGK "),Ne,e("VLYSK "),Re,i(o,null,{default:n(()=>[e("$")]),_:1}),e(" head -n6 sample7.dat | prot2pept | peptfilter | tr I L | sort -u | unipept pept2lca -e "),Be,e("peptide,taxon_id,taxon_name,taxon_rank "),qe,e("GLTAALEAADAMTK,186802,Clostridiales,order "),Fe,e("MDGTEYLLVK,1263,Ruminococcus,genus "),$e,e("MEVAVGDK,1263,Ruminococcus,genus "),Ye,e("SGLVLPGQAQEKPQQAEVVAVGPGGVVDGK,1263,Ruminococcus,genus "),Je,e("VLYSK,1,root,no rank ")]),_:1})]),_:1}),i(h,{class:"mt-5",title:"Comparison with the Unipept web interface","large-title":""},{default:n(()=>[t("p",null,[e(" The biodiversity in sample 7 from the study of "+d(r.verberkmoes.short)+" can be easily computed and visualised using the ",1),He,e(" feature of the "),i(u,{to:"/",router:""},{default:n(()=>[e("Unipept website")]),_:1}),e(". All it takes is to paste the list of peptides that were identified from an environmental sample in a text area, select the appropriate search options, and to click the Search button to launch the identification process. ")]),t("p",null,[e(" In the session that is shown in "),i(u,{to:"#fig2",router:""},{default:n(()=>[e("Figure 2")]),_:1}),e(", we have indicated that no distinction should be made between leucine ("),i(a,null,{default:n(()=>[e("L")]),_:1}),e(") and isoleucine ("),i(a,null,{default:n(()=>[e("I")]),_:1}),e("), that the peptides must be deduplicate prior to the actual biodiversity analysis, and that the results must be exported in csv format ("),je,e("). Breaking up the missed cleavages happens by default. In addition, the option "),Oe,e(" can be activated to indicate that the results should be aggregated as a post-processing step (not selected in this example). ")]),i(m,{id:"fig2",class:"mb-5",image:f(T)},{default:n(()=>[ze,e(" Processing of sample 7 from the study of "+d(r.verberkmoes.short)+" using the Metaproteomics Analysis feature of the ",1),i(u,{to:"/",router:""},{default:n(()=>[e("Unipept website")]),_:1}),e(". In this example session we indicate that no distinction should be made between leucine ("),i(a,null,{default:n(()=>[e("L")]),_:1}),e(") and isoleucine ("),i(a,null,{default:n(()=>[e("I")]),_:1}),e("), that the peptides must be deduplicated, and that the results must be exported in csv format ("),We,e("). Breaking up the missed cleavages happens by default. In addition, the option "),Xe,e(" can be activated to indicate that the results should be aggregated as a post-processing step (not selected in this example). ")]),_:1},8,["image"]),t("p",null,[e(" The same result can be obtained using the following combination of commands from the Unipept "),i(l,null,{default:n(()=>[e("CLI")]),_:1}),e(". The timing gives an impression of the performance of Unipept to compute the "),i(l,null,{default:n(()=>[e("LCA")]),_:1}),e("s for all 2005 unique tryptic peptides extracted from sample 7. It indicates that part of the processing is parallelised, and that the majority of the processing time is consumed by exchanging data between the client and the Unipept server and the server-side processing of the data. ")]),i(p,null,{default:n(()=>[e(" $ prot2pept < sample7.dat | peptfilter | tr I L | sort -u | wc -l 2005 $ time prot2pept < sample7.dat | peptfilter | tr I L | sort -u | unipept pept2lca -e > sample7.csv real 0m0.329s user 0m0.465s sys 0m0.038s $ head sample7.csv peptide,taxon_id,taxon_name,taxon_rank AAALNLVPNSTGAAK,2,Bacteria,superkingdom AAALNTLAHSTGAAK,1678,Bifidobacterium,genus AAALNTLPHSTGAAK,1678,Bifidobacterium,genus AAAMSMLPTSTGAAK,2,Bacteria,superkingdom AAANESFGYNEDELVSSDLVGMR,186802,Clostridiales,order AAANYLDLPLYR,2,Bacteria,superkingdom AAAVNLVPNSTGAAK,2,Bacteria,superkingdom AADAAAALGEGLQAFCLPGSVADHR,186802,Clostridiales,order AADAAAALGEGLQAFCLPGSVADTR,186802,Clostridiales,order ")]),_:1}),t("p",null,[e(" For those that are not familiar with "),Ze,e(", the "),i(a,null,{default:n(()=>[e("unipept")]),_:1}),e(" command also supports the "),i(a,null,{default:n(()=>[e("-i/--input")]),_:1}),e(" option to read the peptides from the file that is passed as an argument and the "),i(a,null,{default:n(()=>[e("-o/--output")]),_:1}),e(" option to store the results in a file that is passed as an argument. ")]),i(p,null,{default:n(()=>[e(" $ unipept pept2lca "),et,e(" sample7.dat "),tt,e(" sample7.csv $ head sample7.csv peptide,taxon_id,taxon_name,taxon_rank AAALNLVPNSTGAAK,2,Bacteria,superkingdom AAALNTLAHSTGAAK,1678,Bifidobacterium,genus AAALNTLPHSTGAAK,1678,Bifidobacterium,genus AAAMSMLPTSTGAAK,2,Bacteria,superkingdom AAANESFGYNEDELVSSDLVGMR,186802,Clostridiales,order AAANYLDLPLYR,2,Bacteria,superkingdom AAAVNLVPNSTGAAK,2,Bacteria,superkingdom AADAAAALGEGLQAFCLPGSVADHR,186802,Clostridiales,order AADAAAALGEGLQAFCLPGSVADTR,186802,Clostridiales,order ")]),_:1}),t("p",null,[e(" If needed, the "),i(a,null,{default:n(()=>[e("unipept pept2lca")]),_:1}),e(" command can be used in combination with the "),i(a,null,{default:n(()=>[e("-a")]),_:1}),e(" option to fetch the complete lineages for all "),i(l,null,{default:n(()=>[e("LCA")]),_:1}),e("s according to the Unipept Taxonomy. "),i(u,{to:"#fig3",router:""},{default:n(()=>[e("Figure 3")]),_:1}),e(" shows the hierarchical classification of the taxa that could be identified in sample 7, with the node representing the order "),nt,e(" having the focus. A similar tree view can be found in the "),it,e(" tab on the page showing the results of a Metaproteomics analysis in the Unipept web interface. ")]),i(m,{id:"fig3",class:"mb-5",image:f(S)},{default:n(()=>[st,e(" Snapshot of an interactive tree view that shows the results of the biodiversity analysis of sample 7, a metaproteomics data set from the study of "+d(r.verberkmoes.short)+". The node that represents the order ",1),at,e(" has the focus. Percentages on the nodes indicate the relative amount of tryptic peptides that are specific for the corresponding taxa or one of its subtaxa, and also correspond to the linear color gradient that was used to color the nodes: red (100%) - light yellow (0%). ")]),_:1},8,["image"])]),_:1}),ot,t("ul",null,[(g(),v(w,null,V(r,_=>t("li",{key:_.short},d(_.full),1)),64))])]),_:1}))}});const At=x(lt,[["__scopeId","data-v-4d30876f"]]);export{At as default};
