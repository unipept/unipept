import{I as s}from"./InlineCode-67d03729.js";import{H as r}from"./HeaderBodyCard-3295d4c5.js";import{I as o}from"./Initialism-440d96b0.js";import{B as u,S as l}from"./Boxed-9f9dd66a.js";import{_ as d}from"./ParameterTable.vue_vue_type_script_setup_true_lang-eb31a2e0.js";import{d as h,o as c,c as m,w as n,l as g,g as e,b as t,a}from"./index-eea28a33.js";import{V as f}from"./VDivider-834b9f8e.js";import"./_plugin-vue_export-helper-c27b6911.js";import"./VCard-9d59c194.js";import"./VRow-94e3f3e6.js";const _=e("h1",{class:"font-weight-light"}," umgap taxa2agg ",-1),p={class:"font-weight-light"},b=e("i",null,"standard input",-1),x=e("i",null,"standard output",-1),y=e("b",null,"cat input.fa",-1),w=e("br",null,null,-1),T=e("br",null,null,-1),v=e("br",null,null,-1),A=e("br",null,null,-1),I=e("br",null,null,-1),C=e("br",null,null,-1),B=e("br",null,null,-1),q=e("br",null,null,-1),L=e("b",null,"umgap taxa2agg taxons.tsv < input.fa",-1),V=e("br",null,null,-1),k=e("br",null,null,-1),S=e("b",null,"-m rmq -a mrtl",-1),D=e("li",null,[e("b",null,"-m tree -a lca\\*"),t(" returns the taxon (possibly not from the list) of lowest rank without contradicting taxa in the list. Non-contradicting taxa of a taxon are either itself, its ancestors and its descendants. A tree-based algorithm is used. ")],-1),M=e("b",null,"-m tree -a hybrid",-1),K=h({__name:"MetagenomicsTaxa2AggPage",setup(N){const i=[{name:"-h / --help",description:"Prints help information"},{name:"-V / --version",description:"Prints version information"},{name:"-r / --ranked",description:"Let all taxa snap to taxa with a named rank (such as species) during calculations"},{name:"-s / --scored",description:"Each taxon is followed by a score between 0 and 1"},{name:"-f / --factor f",description:"The factor for the hybrid aggregation, from 0.0 (MRTL) to 1.0 (LCA*) [default: 0.25]"},{name:"-l / --lower-bound l",description:"The smallest input frequency for a taxon to be included in the aggregation [default: 0]"},{name:"-m / --method m",description:"The method to use for aggregation [default: tree] [possible values: tree, rmq]"},{name:"-a / --aggregate a",description:"The strategy to use for aggregation [default: hybrid] [possible values: lca*, hybrid, mrtl]"}];return(F,P)=>(c(),m(g,null,{default:n(()=>[_,e("h3",p,[t(" Aggregates taxon IDs in a "),a(o,null,{default:n(()=>[t("FASTA")]),_:1}),t(" stream ")]),a(f,{class:"my-2"}),e("p",null,[t(" The "),a(s,null,{default:n(()=>[t("umgap taxa2agg")]),_:1}),t(" command takes one or more lists of taxon IDs as input and aggregates them into a single consensus taxon. ")]),a(r,{id:"usage",title:"usage","large-title":""},{default:n(()=>[e("p",null,[t(" The input is given in a "),a(o,null,{default:n(()=>[t("FASTA")]),_:1}),t(" format on "),b,t(". Each "),a(o,null,{default:n(()=>[t("FASTA")]),_:1}),t(" record contains a list of taxon IDs, separated by newlines. The output is written to "),x,t(", also in a "),a(o,null,{default:n(()=>[t("FASTA")]),_:1}),t(" format, each record containing a single taxon ID, which is the consensus taxon resulting from aggregation of the given list. ")]),e("p",null,[t(" The taxonomy to be used is passed as an argument to this command. This is a preprocessed version of the "),a(o,null,{default:n(()=>[t("NCBI")]),_:1}),t(" taxonomy. ")]),a(u,{style:{"max-height":"fit-content"}},{default:n(()=>[a(l,null,{default:n(()=>[t("$")]),_:1}),t(),y,w,t(">header1 "),T,t("571525 "),v,t("571525 "),A,t("6920 "),I,t("6920 "),C,t("1 "),B,t("6920 "),q,a(l,null,{default:n(()=>[t("$")]),_:1}),t(),L,V,t(">header1 "),k,t("571525 ")]),_:1}),e("p",null,[t(" By default, the aggregation used is the maximum root-to-leaf path ("),a(o,null,{default:n(()=>[t("MRTL")]),_:1}),t("). A variant of the lowest common ancestor ("),a(o,null,{default:n(()=>[t("LCA")]),_:1}),t("*) aggregation is also available via the "),a(s,null,{default:n(()=>[t("-a")]),_:1}),t(" and "),a(s,null,{default:n(()=>[t("-m")]),_:1}),t(" options, as is a hybrid approach. ")]),e("ul",null,[e("li",null,[S,t(" is the default aggregation strategy. It selects the taxon from the given list which has the highest frequency of ancestors in the list (including its own frequency). A range-minimum-query ("),a(o,null,{default:n(()=>[t("RMQ")]),_:1}),t(") algorithm is used. ")]),D,e("li",null,[M,t(" mixes the above two strategies, which results in a taxon which might have not have the highest frequency of ancestors in the list, but would have less contradicting taxa. Use the "),a(s,null,{default:n(()=>[t("-f")]),_:1}),t(" option to select a hybrid close to the "),a(s,null,{default:n(()=>[t("MRTL(-f 0.0)")]),_:1}),t(" or to the "),a(s,null,{default:n(()=>[t("LCA (-f 1.0)")]),_:1}),t(". ")])]),a(d,{class:"mt-5 mb-3",parameters:i})]),_:1})]),_:1}))}});export{K as default};
