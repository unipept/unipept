import{I as l}from"./InlineCode-67d03729.js";import{H as i}from"./HeaderBodyCard-3295d4c5.js";import{I as d}from"./Initialism-440d96b0.js";import{B as r,S as a}from"./Boxed-9f9dd66a.js";import{_ as u}from"./ParameterTable.vue_vue_type_script_setup_true_lang-eb31a2e0.js";import{d as c,o as h,c as _,w as s,l as m,a as n,g as t,b as e}from"./index-eea28a33.js";import{V as p}from"./VDivider-834b9f8e.js";import"./_plugin-vue_export-helper-c27b6911.js";import"./VCard-9d59c194.js";import"./VRow-94e3f3e6.js";const f=t("h1",{class:"font-weight-light"}," umgap seedextend ",-1),g=t("h3",{class:"font-weight-light"}," Selects promising regions in sequences of taxon IDs ",-1),b=t("i",null,"standard input",-1),x=t("b",null,"cat dna.fa",-1),C=t("br",null,null,-1),A=t("br",null,null,-1),G=t("br",null,null,-1),T=t("b",null,"umgap translate -n -a < dna.fa | umgap prot2kmer2lca 9mer.index > input.fa",-1),w=t("br",null,null,-1),y=t("br",null,null,-1),I=t("br",null,null,-1),v=t("br",null,null,-1),k=t("br",null,null,-1),B=t("br",null,null,-1),D=t("br",null,null,-1),V=t("br",null,null,-1),R=t("br",null,null,-1),q=t("br",null,null,-1),P=t("br",null,null,-1),S=t("br",null,null,-1),N=t("b",null,"umgap seedextend < input.fa",-1),$=t("br",null,null,-1),z=t("br",null,null,-1),H=t("br",null,null,-1),U=t("br",null,null,-1),j=t("br",null,null,-1),E=t("br",null,null,-1),F=t("br",null,null,-1),M=t("p",null," Taxon IDs are separated by newlines in the actual output, but are separated by spaces in this example. ",-1),le=c({__name:"MetagenomicsSeedExtendPage",setup(J){const o=[{name:"-h / --help",description:"Prints help information"},{name:"-V / --version",description:"Prints version information"},{name:"-g / --max-gap-size g",description:"The maximum length of a gap between seeds in an extension [default: 0]"},{name:"-s / --min-seed-size s",description:"The minimum length of equal taxa to count as seed [default: 2]"},{name:"-p / --penalty p",description:"The score penalty for gaps in extended seeds [default: 5]"},{name:"-r / --ranked r",description:"Use taxon ranks in given NCBI taxonomy tsv-file to pick extended seed with highest score"}];return(K,L)=>(h(),_(m,null,{default:s(()=>[f,g,n(p,{class:"my-2"}),t("p",null,[e(" The "),n(l,null,{default:s(()=>[e("umgap seedextend")]),_:1}),e(" command takes one or more sequences of taxon IDs and selects regions of consecutive predictions. It can be used to filter out accidental matches of incorrect taxa. ")]),n(i,{id:"usage",title:"Usage","large-title":""},{default:s(()=>[t("p",null,[e(" The input is given in a "),n(d,null,{default:s(()=>[e("FASTA")]),_:1}),e(" format on "),b,e(". It should consist of taxon IDs separated by newlines, and the order of these taxa should reflect their location on a peptide, such as output by the "),n(l,null,{default:s(()=>[e("umgap prot2kmer2lca -o")]),_:1}),e(" command. As such, 3 consecutive equal IDs representing 9-mers, for instance, indicate a 11-mer match. This so-called seed could still be extended with other taxa, forming an extended seed. The command writes all taxa in any of these extended seeds to "),n(l,null,{default:s(()=>[e("standard output")]),_:1}),e(". ")]),n(r,{style:{"max-height":"fit-content"}},{default:s(()=>[n(a,null,{default:s(()=>[e("$")]),_:1}),e(),x,C,e(">header1 "),A,e("CGCAGAGACGGGTAGAACCTCAGTAATCCGAAAAGCCGGGATCGACCGCCCCTTGCTTGCAGCCGGGCACTACAGGACCC "),G,n(a,null,{default:s(()=>[e("$")]),_:1}),e(),T,w,e(">header1|1 "),y,e("9606 9606 2759 9606 9606 9606 9606 9606 9606 9606 8287 "),I,e(">header1|2 "),v,e("2026807 888268 186802 1598 1883 "),k,e(">header1|3 "),B,e("1883 "),D,e(">header1|1R "),V,e("27342 2759 155619 1133106 38033 2 "),R,e(">header1|2R "),q,e(">header1|3R "),P,e("2951 "),S,n(a,null,{default:s(()=>[e("$")]),_:1}),e(),N,$,e(">header1|1 "),z,e("9606 9606 2759 9606 9606 9606 9606 9606 9606 9606 8287 "),H,e(">header1|2 "),U,e(">header1|3 "),j,e(">header1|1R "),E,e(">header1|2R "),F,e(">header1|3R ")]),_:1}),M,t("p",null,[e(" The number of consecutive equal IDs to start a seed is 2 by default, and can be changed using the "),n(l,null,{default:s(()=>[e("-s")]),_:1}),e(" option. The maximum length of gaps between seeds to join in an extension can be set with "),n(l,null,{default:s(()=>[e("-g")]),_:1}),e(", no gaps are allowed by default. ")]),t("p",null,[e(" The command can be altered to print only the extended seed with the highest score among all extended seeds. Pass a taxonomy using the "),n(l,null,{default:s(()=>[e("-r taxon.tsv")]),_:1}),e(" option to activate this. In this scored mode, extended seeds with gaps are given a penalty of 5, which can be made more or less severe (higher or lower) with the "),n(l,null,{default:s(()=>[e("-p")]),_:1}),e(" option. ")]),n(u,{class:"mt-5 mb-3",parameters:o})]),_:1})]),_:1}))}});export{le as default};
