import{d as S,i as s,j as E,o as R,c as x,w as t,l as L,bx as D,g as l,a as i,b as e,K as q}from"./index-eea28a33.js";import{H as _}from"./HeaderBodyCard-3295d4c5.js";import{I as n}from"./InlineCode-67d03729.js";import{I as a}from"./Initialism-440d96b0.js";import{S as T}from"./StaticAlert-5833da9d.js";import{E as u,T as Y}from"./TryItCard-91655383.js";import{R as d}from"./ResourceLink-d34b4283.js";import{V as C}from"./VDivider-834b9f8e.js";import{a as j,V as A}from"./VRow-94e3f3e6.js";import{V as K,a as y}from"./VTextarea-ac294625.js";import"./VCard-9d59c194.js";import"./_plugin-vue_export-helper-c27b6911.js";import"./VAlert-6315e811.js";import"./Boxed-9f9dd66a.js";import"./VField-cc36921e.js";import"./forwardRefs-e2994a01.js";const Q={class:"font-weight-light"},k=l("h3",{class:"font-weight-light"}," Returns the functional InterPro entries associated with a given tryptic peptide. ",-1),U=l("h3",{class:"font-weight-medium"}," input ",-1),z=l("h3",{class:"font-weight-medium"}," equate_il ",-1),O=l("i",null,"Equate I and L",-1),H=l("h3",{class:"font-weight-medium"}," extra ",-1),B=l("h3",{class:"font-weight-medium"}," domains ",-1),N={class:"my-3"},M=l("thead",null,[l("tr",null,[l("th",{class:"text-start"}," Name "),l("th",{class:"text-start"}," Description ")])],-1),W=l("tr",null,[l("td",null,[l("b",null,"Input[]"),l("br"),l("i",{style:{"font-size":"85%"}},"required")]),l("td",{class:"py-3"},[e(" Tryptic peptide to search for. Add multiple parameters to search for multiple peptides. "),l("br"),l("div",{class:"mt-3",style:{"font-size":"85%"}}," Value: string ")])],-1),X=l("td",null,[l("b",null,"equate_il"),l("br"),l("i",{style:{"font-size":"85%"}},"optional")],-1),G={class:"py-3"},J=l("br",null,null,-1),F={class:"mt-3",style:{"font-size":"85%"}},Z=l("td",null,[l("b",null,"extra"),l("br"),l("i",{style:{"font-size":"85%"}},"optional")],-1),$={class:"py-3"},ee=l("br",null,null,-1),te={class:"mt-3",style:{"font-size":"85%"}},ie=l("td",null,[l("b",null,"domains"),l("br"),l("i",{style:{"font-size":"85%"}},"optional")],-1),le={class:"py-3"},ne=l("br",null,null,-1),ae={class:"mt-3",style:{"font-size":"85%"}},se=l("h2",{id:"examples",class:"font-weight-light mt-10"}," Examples ",-1),re=l("h3",{class:"font-weight-medium"}," Input[] ",-1),oe=l("h3",{class:"font-weight-medium"}," Parameters ",-1),Se=S({__name:"APIPept2InterproPage",setup(pe){const p=new D,P=s({}),v=s({}),g=s({}),w=s({}),b=s({}),c=s(""),h=s(!1),f=s(!1),m=s(!1),I=s({}),V=async()=>{I.value=await p.pept2interpro(c.value.split(`
`),h.value,f.value,m.value)};return E(async()=>{P.value=await p.pept2interpro(["AIPQLEVARPADAYETAEAYR"]),v.value=await p.pept2interpro(["AIPQLEVARPADAYETAEAYR","APVLSDSSCK"]),g.value=await p.pept2interpro(["APVLSDSSCK"],!0,void 0,void 0),w.value=await p.pept2interpro(["AIPQLEVARPADAYETAEAYR"],void 0,!0,void 0),b.value=await p.pept2interpro(["APVLSDSSCK"],void 0,void 0,!0)}),(ue,r)=>(R(),x(L,null,{default:t(()=>[l("h1",Q,[i(a,null,{default:t(()=>[e("POST")]),_:1}),e(" /api/v1/pept2interpro ")]),k,i(C,{class:"my-2"}),l("p",null,[e(" This method returns the functional InterPro entries associated with a given tryptic peptide. This is the same information as provided when performing a search with the "),i(d,{to:"/tpa",router:""},{default:t(()=>[e("Tryptic Peptide Analysis")]),_:1}),e(" in the web interface. ")]),i(_,{id:"request",title:"Request","large-title":""},{default:t(()=>[l("p",null,[e(" The pept2interpro method can be used by doing a "),i(a,null,{default:t(()=>[e("HTTP POST")]),_:1}),e("-request (preferred) or "),i(a,null,{default:t(()=>[e("GET")]),_:1}),e("-request to "),i(n,null,{default:t(()=>[e("https://api.unipept.ugent.be/api/v1/pept2interpro")]),_:1}),e(". "),i(d,{to:"#parameters",router:""},{default:t(()=>[e("Parameters")]),_:1}),e(" can be included in the request body ("),i(a,null,{default:t(()=>[e("POST")]),_:1}),e(") or in the query string ("),i(a,null,{default:t(()=>[e("GET")]),_:1}),e("). The only required parameter is "),i(n,null,{default:t(()=>[e("input[]")]),_:1}),e(", which takes one or more tryptic peptides. ")]),U,l("p",null,[i(n,null,{default:t(()=>[e("input[]")]),_:1}),e(" is a required parameter that takes one or more tryptic peptides. Unipept will return the functional InterPro entries associated with each of the "),i(n,null,{default:t(()=>[e("input[]")]),_:1}),e(" peptides based on their occurrence in UniProt entries. To pass multiple peptides at once, simply add multiple "),i(n,null,{default:t(()=>[e("input[]")]),_:1}),e(" parameters (see "),i(d,{to:"#example2",router:""},{default:t(()=>[e("example")]),_:1}),e("). ")]),i(T,{title:"Input size"},{default:t(()=>[l("p",null,[e(" Unipept puts no restrictions on the number of peptides passed to the "),i(n,null,{default:t(()=>[e("input[]")]),_:1}),e(" parameter. Keep in mind that searching for lots of peptides at once may cause the request to timeout or, in the case of a "),i(a,null,{default:t(()=>[e("GET")]),_:1}),e("-request, exceed the maximum "),i(a,null,{default:t(()=>[e("URL")]),_:1}),e(" length. When performing bulk searches, we suggest splitting the input set over requests of 100 peptides each. ")])]),_:1}),z,l("p",null,[i(n,null,{default:t(()=>[e("equate_il")]),_:1}),e(" is an optional parameter and can either be "),i(n,null,{default:t(()=>[e("true")]),_:1}),e(" or "),i(n,null,{default:t(()=>[e("false")]),_:1}),e(". When not set explicitly, the parameter defaults to "),i(n,null,{default:t(()=>[e("false")]),_:1}),e(". When the parameter is set to "),i(n,null,{default:t(()=>[e("true")]),_:1}),e(", isoleucine (I) and leucine (L) are equated when matching tryptic peptides to UniProt entries. This setting is similar to checking the "),O,e(" checkbox when performing a search with the "),i(d,{to:"/tpa",router:""},{default:t(()=>[e("Tryptic Peptide Analysis")]),_:1}),e(" in the web interface. ")]),H,l("p",null,[i(n,null,{default:t(()=>[e("extra")]),_:1}),e(" is an optional parameter and can either be "),i(n,null,{default:t(()=>[e("true")]),_:1}),e(" or "),i(n,null,{default:t(()=>[e("false")]),_:1}),e(". When not set explicitly, the parameter defaults to "),i(n,null,{default:t(()=>[e("false")]),_:1}),e(". When the parameter is set to "),i(n,null,{default:t(()=>[e("true")]),_:1}),e(", Unipept will also return the name associated with an InterPro entry. See the "),i(d,{to:"#response",router:""},{default:t(()=>[e("response")]),_:1}),e(" section for an overview of the information fields returned. ")]),B,l("p",null,[i(n,null,{default:t(()=>[e("domains")]),_:1}),e(" is an optional parameter that can be used to separate the InterPro entries in groups according to their type (domain, family, homologous superfamily, repeat, conserved site, active site, binding site, "),i(a,null,{default:t(()=>[e("PTM")]),_:1}),e("). ")]),i(T,{title:"Performance penalty"},{default:t(()=>[l("p",null,[e(" Setting "),i(n,null,{default:t(()=>[e("extra")]),_:1}),e(" to "),i(n,null,{default:t(()=>[e("true")]),_:1}),e(" has a performance penalty inferred from additional database queries. Do not use this parameter unless the extra information fields are needed. ")])]),_:1})]),_:1}),i(_,{id:"response",title:"Response",class:"mt-5","large-title":""},{default:t(()=>[e(" A list of "),i(a,null,{default:t(()=>[e("JSON")]),_:1}),e(" objects is returned. By default, each object contains the following information fields: "),l("ul",N,[l("li",null,[i(n,null,{default:t(()=>[e("peptide")]),_:1}),e(": the peptide that was searched for.")]),l("li",null,[i(n,null,{default:t(()=>[e("total_protein_count")]),_:1}),e(": total amount of proteins matched with the given peptide.")]),l("li",null,[i(n,null,{default:t(()=>[e("ipr")]),_:1}),e(": A list of "),i(a,null,{default:t(()=>[e("JSON")]),_:1}),e(" objects that each represent an InterPro entry associated with the current tryptic peptide. "),l("ul",null,[l("li",null,[i(n,null,{default:t(()=>[e("code")]),_:1}),e(": InterPro entry code associated with the current tryptic peptide.")]),l("li",null,[i(n,null,{default:t(()=>[e("protein_count")]),_:1}),e(": amount of proteins matched with the given tryptic peptide that are labeled with the current InterPro code. ")]),l("li",null,[i(n,null,{default:t(()=>[e("name")]),_:1}),e(": optional, name of the InterPro entry. Included when the "),i(n,null,{default:t(()=>[e("extra")]),_:1}),e(" parameter is set to "),i(n,null,{default:t(()=>[e("true")]),_:1}),e(". ")]),l("li",null,[i(n,null,{default:t(()=>[e("type")]),_:1}),e(": optional, type of the InterPro entry. Included when the "),i(n,null,{default:t(()=>[e("extra")]),_:1}),e(" parameter is set to "),i(n,null,{default:t(()=>[e("true")]),_:1}),e(". ")])])])])]),_:1}),i(_,{id:"parameters",title:"Parameters",class:"mt-5","large-title":""},{default:t(()=>[l("table",null,[M,l("tbody",null,[W,l("tr",null,[X,l("td",G,[e(" Equate isoleucine (I) and leucine (L). "),J,l("div",F,[e(" Value: Must be "),i(n,null,{default:t(()=>[e("true")]),_:1}),e(" or "),i(n,null,{default:t(()=>[e("false")]),_:1}),e(" (default) ")])])]),l("tr",null,[Z,l("td",$,[e(" Return additional information fields if "),i(n,null,{default:t(()=>[e("true")]),_:1}),e(". "),ee,l("div",te,[e(" Value: Must be "),i(n,null,{default:t(()=>[e("true")]),_:1}),e(" or "),i(n,null,{default:t(()=>[e("false")]),_:1}),e(" (default) ")])])]),l("tr",null,[ie,l("td",le,[e(" Separates InterPro entries in groups according to their type "),i(n,null,{default:t(()=>[e("true")]),_:1}),e(". "),ne,l("div",ae,[e(" Value: Must be "),i(n,null,{default:t(()=>[e("true")]),_:1}),e(" or "),i(n,null,{default:t(()=>[e("false")]),_:1}),e(" (default) ")])])])])])]),_:1}),se,i(u,{title:"Retrieve the functional InterPro entries associated with a given tryptic peptide",response:P.value},{description:t(()=>[e(" This example retrieves all functional InterPro entries associated with the tryptic peptide "),l("i",null,[i(a,null,{default:t(()=>[e("AIPQLEVARPADAYETAEAYR")]),_:1})]),e(". The result is the same as this search with the Tryptic Peptide Analysis in the web interface. ")]),post:t(()=>[e(" curl -X POST -H 'Accept: application/json' api.unipept.ugent.be/api/v1/pept2interpro -d 'input[]=AIPQLEVARPADAYETAEAYR' ")]),get:t(()=>[e(" https://api.unipept.ugent.be/api/v1/pept2interpro.json?input[]=AIPQLEVARPADAYETAEAYR ")]),_:1},8,["response"]),i(u,{id:"example2",class:"mt-5",title:"Retrieve the functional InterPro entries associated with each of multiple tryptic peptides",response:v.value},{description:t(()=>[e(" This example retrieves the functional InterPro entries for both the tryptic peptides "),l("i",null,[i(a,null,{default:t(()=>[e("AIPQLEVARPADAYETAEAYR")]),_:1})]),e(" and "),l("i",null,[i(a,null,{default:t(()=>[e("APVLSDSSCK")]),_:1})]),e(". The result is the same as the combination of this search and this search with the Tryptic Peptide Analysis in the web interface. ")]),post:t(()=>[e(" curl -X POST -H 'Accept: application/json' api.unipept.ugent.be/api/v1/pept2interpro -d 'input[]=AIPQLEVARPADAYETAEAYR' -d 'input[]=APVLSDSSCK' ")]),get:t(()=>[e(" https://api.unipept.ugent.be/api/v1/pept2interpro.json?input[]=AIPQLEVARPADAYETAEAYR&input[]=APVLSDSSCK ")]),_:1},8,["response"]),i(u,{class:"mt-5",title:"Retrieve the functional InterPro entries associated with a single tryptic peptide, while equating I and L",response:g.value},{description:t(()=>[e(" This example retrieves the functional InterPro entries associated with the tryptic peptide "),l("i",null,[i(a,null,{default:t(()=>[e("APVLSDSSCK")]),_:1})]),e(". In searching, isoleucine (I) and leucinge (L) are considered equal. The result is the same as this search with the Tryptic Peptide Analysis in the web interface. ")]),post:t(()=>[e(" curl -X POST -H 'Accept: application/json' api.unipept.ugent.be/api/v1/pept2interpro -d 'input[]=APVISDSSCK' -d 'equate_il=true' ")]),get:t(()=>[e(" https://api.unipept.ugent.be/api/v1/pept2interpro.json?input[]=APVISDSSCK&equate_il=true ")]),_:1},8,["response"]),i(u,{class:"mt-5",title:"Retrieve the functional InterPro entries associated with a single tryptic peptide, with extra information enabled",response:w.value},{description:t(()=>[e(" This example retrieves the functional InterPro entries associated with the tryptic peptide "),l("i",null,[i(a,null,{default:t(()=>[e("AIPQLEVARPADAYETAEAYR")]),_:1})]),e(" including the name and type of each InterPro entry. The result is the same as this search with the Tryptic Peptide Analysis in the web interface. ")]),post:t(()=>[e(" curl -X POST -H 'Accept: application/json' api.unipept.ugent.be/api/v1/pept2interpro -d 'input[]=AIPQLEVARPADAYETAEAYR' -d 'extra=true' ")]),get:t(()=>[e(" https://api.unipept.ugent.be/api/v1/pept2interpro.json?input[]=AIPQLEVARPADAYETAEAYR&extra=true ")]),_:1},8,["response"]),i(u,{class:"mt-5",title:"Retrieve the functional InterPro entries associated with a single tryptic peptide, making a distinction between different types",response:b.value},{description:t(()=>[e(" This example retrieves the functional InterPro entries associated with the tryptic peptide "),l("i",null,[i(a,null,{default:t(()=>[e("APVLSDSSCK")]),_:1})]),e(" distributed over the distinct InterPro types. The result is the same as this search with the Tryptic Peptide Analysis in the web interface. ")]),post:t(()=>[e(" curl -X POST -H 'Accept: application/json' api.unipept.ugent.be/api/v1/pept2interpro -d 'input[]=APVLSDSSCK' -d 'domains=true' ")]),get:t(()=>[e(" https://api.unipept.ugent.be/api/v1/pept2interpro.json?input[]=APVLSDSSCK&domains=true ")]),_:1},8,["response"]),i(Y,{id:"try",class:"mt-5",response:I.value,command:"pept2interpro"},{default:t(()=>[i(j,null,{default:t(()=>[i(A,{cols:"12"},{default:t(()=>[re,i(K,{modelValue:c.value,"onUpdate:modelValue":r[0]||(r[0]=o=>c.value=o),class:"pt-0 mt-0",clearable:"","no-resize":"",filled:"","clear-icon":"mdi-close-circle"},null,8,["modelValue"])]),_:1}),i(A,{cols:"12",class:"dark-label"},{default:t(()=>[oe,i(y,{modelValue:f.value,"onUpdate:modelValue":r[1]||(r[1]=o=>f.value=o),color:"primary",inset:"",label:"extra",density:"compact","hide-details":""},null,8,["modelValue"]),i(y,{modelValue:h.value,"onUpdate:modelValue":r[2]||(r[2]=o=>h.value=o),color:"primary",inset:"",label:"equate_il",density:"compact","hide-details":""},null,8,["modelValue"]),i(y,{modelValue:m.value,"onUpdate:modelValue":r[3]||(r[3]=o=>m.value=o),color:"primary",inset:"",label:"domains",density:"compact","hide-details":""},null,8,["modelValue"])]),_:1}),i(A,{cols:"12"},{default:t(()=>[i(q,{class:"col-12 col-sm-2 float-end",color:"primary",onClick:V},{default:t(()=>[e(" Try it! ")]),_:1})]),_:1})]),_:1})]),_:1},8,["response"])]),_:1}))}});export{Se as default};
